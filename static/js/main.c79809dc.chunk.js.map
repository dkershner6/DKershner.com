{"version":3,"sources":["pages/blog/posts/when-to-use-app-service-plan.md","pages/blog/posts/azure-functions-limits-how-to-overcome.md","pages/blog/posts/azure-functions-consumption-vs-app-service-vs-kubernetes.md","pages/blog/posts/serilog-gotchas.md","components/Navigation.tsx","components/Footer.tsx","components/Seo.tsx","components/TechnologyBadge.tsx","pages/technologies/Technologies.tsx","pages/home/About.tsx","pages/portfolio/PortfolioHeader.tsx","pages/blog/Posts.tsx","classes/Technology.tsx","classes/ProjectAttribute.tsx","pages/portfolio/projects/EnterpriseMarketplace.tsx","pages/portfolio/projects/ShopifySearchEngine.tsx","pages/portfolio/projects/CodeChallenges.tsx","pages/portfolio/Projects.tsx","pages/home/PortfolioMenu.tsx","pages/home/Social.tsx","pages/Home.tsx","pages/portfolio/PortfolioDesignPrinciples.tsx","pages/portfolio/PortfolioDesignSection.tsx","pages/portfolio/PortfolioDesign.tsx","pages/portfolio/CodeChallenges.tsx","pages/Portfolio.tsx","pages/blog/TechnologySelector.tsx","pages/blog/PostContainer.tsx","pages/Blog.tsx","Error.tsx","pages/blog/PostPage.tsx","pages/resumes/ResumesNav.tsx","pages/resumes/ResumeTab/ResumeHeader.tsx","pages/resumes/CoverLetterTab/CoverLetters/InseegoCoverLetter.tsx","pages/resumes/CoverLetterTab/CoverLetters/KollectiveCoverLetter.tsx","pages/resumes/CoverLetterTab/CoverLetters/G5CoverLetter.tsx","pages/resumes/CoverLetterTab/CoverLetters/DevotedHealthCoverLetter.tsx","pages/resumes/CoverLetterTab/CoverLetter.tsx","pages/resumes/CoverLetterTab.tsx","pages/resumes/ResumeTab/Objective.tsx","components/SkillDisplay.tsx","pages/resumes/ResumeTab/Skills.tsx","pages/resumes/ResumeTab/Experience.tsx","pages/resumes/ResumeTab/Education.tsx","pages/resumes/ResumeTab/References.tsx","utils/MakeRange.tsx","pages/resumes/ResumeTab/Resumes/GetResume.tsx","pages/resumes/ResumeTab/Resumes/InseegoResume.tsx","pages/resumes/ResumeTab/Resumes/KollectiveResume.tsx","pages/resumes/ResumeTab/Resumes/G5Resume.tsx","pages/resumes/ResumeTab/Resumes/DevotedHealthResume.tsx","pages/resumes/ResumeTab.tsx","utils/ProperCase.tsx","pages/Resume.tsx","pages/TechnologyPage.tsx","components/Router.tsx","App.tsx","serviceWorker.js","index.tsx"],"names":["module","exports","__webpack_require__","p","Navigation","react_default","a","createElement","Navbar","bg","variant","collapseOnSelect","expand","lib","to","Brand","Toggle","id","aria-controls","Collapse","Nav","className","Link","href","NavDropdown","title","Item","Divider","Footer","Jumbotron","fluid","Container","HelmetHead","props","Helmet","TechnologyBadge","getBootstrapVariant","technologyType","technology","pageLink","undefined","Badge","type","pill","label","style","cursor","concat","technologies","language","familiarity","link","sort","b","About","Fragment","Row","Col","xs","md","filter","map","index","components_TechnologyBadge","key","PortfolioHeaderButton","project","menu","Button","bootstrapVariant","modules","smooth","react_arrow_lib_default","direction","shaftWidth","shaftLength","headWidth","headLength","fill","stroke","strokeWidth","PortfolioHeader","react_lazy_hero_lib_default","imageSrc","color","heroTint","opacity","minHeight","short","isFixed","isCentered","transitionDuration","name","xl","specification","specItem","PortfolioHeader_PortfolioHeaderButton","whenServicePlanContent","require","howToOvercomeContent","consumptionVsAppPlanContent","posts","subtitle","handle","date","author","image","technologyIds","content","getTechnologyById","technologyId","tempTechs","length","ProjectAttribute","value","createAttributeFromTechnology","tempTechnologies","attribute","techInternalLink","console","warn","enterpriseMarketplaceProject","data","attributes","reasons","backend","frontend","shopifySearchEngineProject","liveExampleService","codeChallenges","background","task","projects","getProject","projectId","projArray","PortfolioMenu","portfolio_PortfolioHeader","Social","Home","Seo","parallaxOffset","home_About","home_PortfolioMenu","home_Social","PortfolioDesignPrinciples","Card","Header","ListGroup","ListGroupItem","PortfolioDesignSection","sectionId","sectionName","headerBg","headerText","getOpen","toggleOpen","text","onClick","in","Body","dataSection","returnTechnologies","forEach","push","apply","Object","toConsumableArray","getTechnologiesFromAttributes","iindex","dataSectionAttribute","action","target","reason","iiindex","PortfolioDesign","state","open","keyName","openValue","_this","tempOpen","setState","_this2","this","portfolio_PortfolioDesignPrinciples","portfolio_PortfolioDesignSection","assign","React","Component","CodeChallengeDisplay","challenge","count","lg","as","rel","Title","Text","CodeChallenges","CodeChallenges_CodeChallengeDisplay","Portfolio","match","params","portfolio_CodeChallenges","portfolio_PortfolioDesign","TechnologySelector","writtenTechnologies","react_router_dom","PostContainer","postTechnologies","post","includes","Blog","returnIds","techId","getTechnologies","blog_TechnologySelector","blog_PostContainer","Error","padding","PostPage","getContent","_callee","response","regenerator_default","wrap","_context","prev","next","getPostData","fetch","sent","replace","t0","error","stop","findIndex","src_Error","react_markdown_default","source","resumesList","ResumesNav","company","ResumeHeader","InseegoCoverLetter","KollectiveCoverLetter","G5CoverLetter","GetCoverLetter","CoverLetters_InseegoCoverLetter","CoverLetters_KollectiveCoverLetter","CoverLetters_G5CoverLetter","DevotedHealthCoverLetter","CoverLetter","CoverLetter_GetCoverLetter","CoverLetterTab","ResumeTab_ResumeHeader","CoverLetterTab_CoverLetter","Objective","border","resume","objective","fiveNumbers","SkillBubble","yes","index_esm","SkillDisplay","number","SkillDisplay_SkillBubble","filled","Skills","format","skills","skill","bolded","subSkills","subSkill","components_SkillDisplay","score","otherSkills","otherSkill","Experience","Education","References","references","reference","description","makeRange","beginNumber","endNumber","returnArray","x","resumes","spaces","getResume","returnResume","log","URLSearchParams","window","location","search","get","ResumeTab","ResumeTab_Experience","ResumeTab_Education","ResumeTab_Objective","ResumeTab_Skills","space","ResumeTab_References","properCase","txt","charAt","toUpperCase","substr","toLowerCase","Resume","activeTab","Resume_TabChooser","ButtonGroup","TabChooser","resumes_CoverLetterTab","resumes_ResumeTab","TechnologyPage","searchProjectSection","projectSectionName","projectSectionUses","projectSection","returnObj","projectUses","uses","getProjectsForTechnology","getPostsForTechnology","AppRouter","react_router","exact","path","component","status","App","ReactGA","initialize","pageview","pathname","Router","components_Navigation","components_Footer","Boolean","hostname","rootElement","document","getElementById","hasChildNodes","hydrate","src_App","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c79809dc.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/when-to-use-app-service-plan.75ff3ae3.md\";","module.exports = __webpack_public_path__ + \"static/media/azure-functions-limits-how-to-overcome.91f7b463.md\";","module.exports = __webpack_public_path__ + \"static/media/azure-functions-consumption-vs-app-service-vs-kubernetes.1b0b2d44.md\";","module.exports = __webpack_public_path__ + \"static/media/serilog-gotchas.af705e3f.md\";","import React from 'react';\r\nimport { Nav, Navbar, NavDropdown } from 'react-bootstrap';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\n\r\nconst Navigation = () => {\r\n  return (\r\n    <Navbar bg='dark' variant='dark' collapseOnSelect expand='lg'>\r\n      <LinkContainer to='/'>\r\n        <Navbar.Brand>Derek Kershner</Navbar.Brand>\r\n      </LinkContainer>\r\n      <Navbar.Toggle id='navbar-toggle' aria-controls='responsive-navbar-nav' />\r\n      <Navbar.Collapse id='navbar-collapse'>\r\n        <Nav className='mr-auto'>\r\n          <Nav.Link href='/'>Home</Nav.Link>\r\n          <Nav.Link href='/#about'>About</Nav.Link>\r\n          <NavDropdown id='portfolio' title='Portfolio' href='/portfolio'>\r\n            <NavDropdown.Item href='/portfolio/codeChallenges'>\r\n              Code Challenges\r\n            </NavDropdown.Item>\r\n            <NavDropdown.Divider />\r\n            <NavDropdown.Item href='/portfolio/enterpriseMarketplace'>\r\n              Enterprise Marketplace\r\n            </NavDropdown.Item>\r\n            <NavDropdown.Item href='/portfolio/shopifySearchEngine'>\r\n              Shopify Search Engine\r\n            </NavDropdown.Item>\r\n          </NavDropdown>\r\n          <Nav.Link href='/blog'>Blog</Nav.Link>\r\n        </Nav>\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","import React from \"react\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport { Jumbotron } from \"react-bootstrap\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer>\r\n      <Jumbotron fluid className=\"mt-5\">\r\n        <Container>\r\n          <p className=\"text-muted\">\r\n            This site was built using{\" \"}\r\n            <a href=\"https://github.com/facebook/create-react-app\">\r\n              Create React App\r\n            </a>\r\n            , with <a href=\"https://www.typescriptlang.org/\">TypeScript</a> to\r\n            make it scalable (for no reason),{\" \"}\r\n            <a href=\"https://github.com/stereobooster/react-snap\">React-Snap</a>{\" \"}\r\n            to make it static and performant,{\" \"}\r\n            <a href=\"https://github.com/nfl/react-helmet\">React Helmet</a> for\r\n            SEO, and{\" \"}\r\n            <a href=\"https://react-bootstrap.github.io/\">React Bootstrap</a> to\r\n            skin it. It's hosted on GitHub Pages, feel free to have a look at\r\n            the{\" \"}\r\n            <a href=\"https://github.com/dkershner6/dkershner6.github.io/tree/master/devenvironment\">\r\n              open source code\r\n            </a>\r\n            . This site is used for testing and changes very frequently, and\r\n            items are often broken. In the past, it has been built with{\" \"}\r\n            <a href=\"https://www.gatsbyjs.org/\">GatsbyJS</a>,{\" \"}\r\n            <a href=\"https://jekyllrb.com/\">Jekyll</a>, WordPress, PHP, and Raw\r\n            HTML<a href=\"/r\">.</a>\r\n          </p>\r\n        </Container>\r\n      </Jumbotron>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\n\r\ninterface HelmetHeadProps {\r\n  title: string;\r\n}\r\n\r\nconst HelmetHead = (props: HelmetHeadProps) => {\r\n  return (\r\n    <Helmet>\r\n      <title>{props.title || \"DKershner.com\"}</title>\r\n    </Helmet>\r\n  );\r\n};\r\n\r\nexport default HelmetHead;\r\n","import React from \"react\";\r\nimport { Badge } from \"react-bootstrap\";\r\n\r\nimport Technology from \"../classes/Technology\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\n\r\ninterface TechnologyBadgeProps {\r\n  technology: Technology;\r\n  pageLink?: boolean | undefined;\r\n}\r\n\r\nconst TechnologyBadge = (props: TechnologyBadgeProps) => {\r\n  const getBootstrapVariant = (technologyType: string) => {\r\n    if (technologyType === \"frontend\") {\r\n      return \"success\";\r\n    } else if (technologyType === \"backend\") {\r\n      return \"warning\";\r\n    } else if (technologyType === \"data\") {\r\n      return \"danger\";\r\n    } else if (technologyType === \"deployment\") {\r\n      return \"primary\";\r\n    } else if (technologyType === \"cloud\") {\r\n      return \"info\";\r\n    } else {\r\n      return undefined;\r\n    }\r\n  };\r\n\r\n  const { technology, pageLink } = props;\r\n  if (pageLink === undefined || pageLink === false) {\r\n    return (\r\n      <Badge variant={getBootstrapVariant(technology.type)} pill>\r\n        {technology.label}\r\n      </Badge>\r\n    );\r\n  } else {\r\n    return (\r\n      <LinkContainer\r\n        style={{ cursor: \"pointer\" }}\r\n        to={`/technologies/${technology.type}/${technology.id}`}\r\n      >\r\n        <Badge variant={getBootstrapVariant(technology.type)} pill>\r\n          {technology.label}\r\n        </Badge>\r\n      </LinkContainer>\r\n    );\r\n  }\r\n};\r\n\r\nexport default TechnologyBadge;\r\n","import Technology from \"../../classes/Technology\";\r\n\r\nconst backendTechnologies: Technology[] = [\r\n  {\r\n    id: \"aspNetCore\",\r\n    label: \"ASP.NET Core / C#\",\r\n    type: \"backend\",\r\n    language: \"C#\",\r\n    familiarity: 5,\r\n    link: \"https://dotnet.microsoft.com/apps/aspnet\"\r\n  },\r\n  {\r\n    id: \"efcore\",\r\n    label: \"Entity Framework Core / C#\",\r\n    type: \"backend\",\r\n    language: \"C#\",\r\n    familiarity: 5\r\n  },\r\n  {\r\n    id: \"azureFunctions\",\r\n    label: \"Azure Functions / C#\",\r\n    type: \"backend\",\r\n    language: \"C#\",\r\n    familiarity: 5,\r\n    link: \"https://azure.microsoft.com/en-us/services/functions/\"\r\n  },\r\n  {\r\n    id: \"azureLogicApps\",\r\n    label: \"Azure Logic Apps\",\r\n    type: \"backend\",\r\n    familiarity: 5,\r\n    link: \"https://azure.microsoft.com/en-us/services/logic-apps/\"\r\n  },\r\n  {\r\n    id: \"node\",\r\n    label: \"Node / JS\",\r\n    type: \"backend\",\r\n    language: \"Typescript\",\r\n    familiarity: 4\r\n  },\r\n  {\r\n    id: \"flask\",\r\n    label: \"Flask / Python\",\r\n    type: \"backend\",\r\n    language: \"Python\",\r\n    familiarity: 3\r\n  }\r\n];\r\n\r\nconst frontendTechnologies: Technology[] = [\r\n  {\r\n    id: \"react\",\r\n    label: \"React / Typescript JS\",\r\n    type: \"frontend\",\r\n    language: \"Typescript JS\",\r\n    familiarity: 5,\r\n    link: \"https://reactjs.org/\"\r\n  },\r\n  {\r\n    id: \"liquid\",\r\n    label: \"Liquid (Shopify)\",\r\n    type: \"frontend\",\r\n    language: \"Liquid\",\r\n    familiarity: 4,\r\n    link: \"https://help.shopify.com/en/themes/liquid\"\r\n  }\r\n];\r\n\r\nconst deploymentTechnologies: Technology[] = [\r\n  {\r\n    id: \"kubernetes\",\r\n    label: \"Kubernetes / Docker\",\r\n    type: \"deployment\",\r\n    familiarity: 4,\r\n    link: \"https://kubernetes.io\"\r\n  },\r\n  {\r\n    id: \"azureDevops\",\r\n    label: \"Azure DevOps\",\r\n    type: \"deployment\",\r\n    familiarity: 4,\r\n    link: \"https://dev.azure.com\"\r\n  }\r\n];\r\n\r\nconst dataTechnologies: Technology[] = [\r\n  {\r\n    id: \"azureSql\",\r\n    label: \"Azure SQL\",\r\n    type: \"data\",\r\n    language: \"SQL\",\r\n    familiarity: 5,\r\n    link: \"https://azure.microsoft.com/en-us/services/sql-database/\"\r\n  },\r\n  {\r\n    id: \"azureStorage\",\r\n    label: \"Azure Storage Blobs / Tables\",\r\n    type: \"data\",\r\n    language: \"NoSQL\",\r\n    familiarity: 5,\r\n    link: \"https://azure.microsoft.com/en-us/services/storage/\"\r\n  },\r\n  {\r\n    id: \"azureStorageQueues\",\r\n    label: \"Azure Storage Queues\",\r\n    type: \"data\",\r\n    language: \"NoSQL\",\r\n    familiarity: 5,\r\n    link: \"https://azure.microsoft.com/en-us/services/storage/\"\r\n  },\r\n  {\r\n    id: \"redis\",\r\n    label: \"Redis\",\r\n    type: \"data\",\r\n    language: \"NoSQL\",\r\n    familiarity: 4,\r\n    link: \"https://redis.io/\"\r\n  },\r\n  {\r\n    id: \"azureSearch\",\r\n    label: \"Azure Search\",\r\n    type: \"data\",\r\n    language: \"NoSQL\",\r\n    familiarity: 4,\r\n    link: \"https://azure.microsoft.com/en-us/services/search/\"\r\n  }\r\n];\r\n\r\nconst clouds: Technology[] = [\r\n  { id: \"azure\", label: \"Azure\", type: \"cloud\", familiarity: 5 },\r\n  {\r\n    id: \"googlefirebase\",\r\n    label: \"Google Firebase\",\r\n    type: \"cloud\",\r\n    familiarity: 4\r\n  },\r\n  { id: \"googlecloud\", label: \"Google Cloud\", type: \"cloud\", familiarity: 3 },\r\n  { id: \"aws\", label: \"AWS\", type: \"cloud\", familiarity: 2 }\r\n];\r\n\r\nfunction sortFamiliarityDescending(a: Technology, b: Technology) {\r\n  if (a.familiarity < b.familiarity) {\r\n    return 1;\r\n  } else if (a.familiarity > b.familiarity) {\r\n    return -1;\r\n  } else {\r\n    return 0;\r\n  }\r\n}\r\n\r\nconst technologies: Technology[] = [\r\n  ...backendTechnologies,\r\n  ...frontendTechnologies,\r\n  ...deploymentTechnologies,\r\n  ...dataTechnologies,\r\n  ...clouds\r\n].sort(sortFamiliarityDescending);\r\n\r\nexport default technologies;\r\nexport {\r\n  backendTechnologies,\r\n  frontendTechnologies,\r\n  deploymentTechnologies,\r\n  dataTechnologies,\r\n  clouds\r\n};\r\n","import React from \"react\";\r\nimport { Container, Row, Col, Jumbotron } from \"react-bootstrap\";\r\n\r\nimport TechnologyBadge from \"../../components/TechnologyBadge\";\r\n\r\nimport technologies from \"../technologies/Technologies\";\r\nimport { internalLink as techInternalLink } from \"../../classes/Technology\";\r\n\r\nconst About = () => {\r\n  return (\r\n    <React.Fragment>\r\n      {/*<HelmetHead title='About | DKershner.com' />*/}\r\n      <Jumbotron fluid className=\"bg-dark text-light\">\r\n        <Container className=\"mt-5\">\r\n          <Row>\r\n            <Col>\r\n              <h2 id=\"about\" className=\"display-4 text-center\">\r\n                Full-Stack Cloud Native\r\n              </h2>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col className=\"align-self-center\">\r\n              <Row>\r\n                <Col className=\"align-self-center\" xs=\"2\" md=\"1\">\r\n                  <h6>Expert</h6>\r\n                </Col>\r\n                <Col>\r\n                  {technologies\r\n                    .filter(technology => technology.familiarity >= 4)\r\n                    .map((technology, index) => (\r\n                      <TechnologyBadge\r\n                        key={index}\r\n                        technology={technology}\r\n                        pageLink\r\n                      />\r\n                    ))}\r\n                </Col>\r\n              </Row>\r\n              <Row className=\"mt-2\">\r\n                <Col className=\"align-self-center\" xs=\"2\" md=\"1\">\r\n                  <h6>Proficient</h6>\r\n                </Col>\r\n                <Col>\r\n                  {technologies\r\n                    .filter(technology => technology.familiarity === 3)\r\n                    .map((technology, index) => (\r\n                      <TechnologyBadge\r\n                        key={index}\r\n                        technology={technology}\r\n                        pageLink\r\n                      />\r\n                    ))}\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n          <Row className=\"mt-2\">\r\n            <Col>\r\n              <ul>\r\n                <li>\r\n                  Kubernetes has proven itself a valuable ally for the\r\n                  reliability sought for business critical applications. At time\r\n                  of writing, we have 70+ pods deployed in 2 clusters. The pods\r\n                  consist of everything from ASP.Net Core to Redis.\r\n                </li>\r\n                <li>\r\n                  From the start of serverless technology's existence, I have\r\n                  whole heartedly embraced the cutting edge of the technology.\r\n                  In this effort, Azure Functions V2 (.Net Core 2.0) are one of\r\n                  the primary vehicles for our software and provide the data\r\n                  processing and simple APIs.\r\n                </li>\r\n                <li>\r\n                  ASP.Net Core in combination with Entity Framework Core make a\r\n                  beautiful, easy to create, and performant solution to Sites\r\n                  and APIs, with piles of middleware to boot.\r\n                </li>\r\n                <li>\r\n                  React combined into ASP.Net Core (or deployed separately for\r\n                  simple sites like this one) gives all the interactivity to the\r\n                  interface one could desire. I have found layering TypeScript\r\n                  over React makes the code much, much less error prone.\r\n                </li>\r\n                <li>\r\n                  Azure DevOps has saved me countless hours of deployments by\r\n                  automating everything. Since we use GitOps for our\r\n                  configuration, everything is is handled automatically, soup to\r\n                  nuts.\r\n                </li>\r\n              </ul>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </Jumbotron>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import React from 'react';\r\nimport { Container, Row, Col, Button } from 'react-bootstrap';\r\nimport LazyHero from 'react-lazy-hero';\r\nimport Arrow from 'react-arrow';\r\nimport { Link as ScrollLink } from 'react-scroll';\r\n\r\nimport PortfolioProps from '../../interfaces/PortfolioProps';\r\n\r\nconst PortfolioHeader = (props: PortfolioProps) => {\r\n  const { project, menu } = props;\r\n  return (\r\n    <LazyHero\r\n      imageSrc={project.imageSrc}\r\n      color={project.heroTint}\r\n      opacity={0.6}\r\n      minHeight={menu || project.short ? '500px' : '900px'}\r\n      isFixed={true}\r\n      isCentered={true}\r\n      transitionDuration={600}\r\n    >\r\n      <h1\r\n        className={\r\n          menu ? 'text-center text-white' : 'display-4 text-center text-white'\r\n        }\r\n      >\r\n        {project.name}\r\n      </h1>\r\n      <Container>\r\n        <Row className='justify-content-center'>\r\n          <Col className='text-left text-white' xl='9'>\r\n            {!menu && <h4>Project Specification</h4>}\r\n            <ul>\r\n              {project.specification.map((specItem, index) => (\r\n                <li key={index}>{specItem}</li>\r\n              ))}\r\n            </ul>\r\n          </Col>\r\n        </Row>\r\n        <Row\r\n          className={\r\n            menu ? 'justify-content-center' : 'justify-content-center mt-5'\r\n          }\r\n        >\r\n          <Col className='text-center'>\r\n            <PortfolioHeaderButton {...props} />\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </LazyHero>\r\n  );\r\n};\r\n\r\nconst PortfolioHeaderButton = (props: PortfolioProps) => {\r\n  const { project, menu } = props;\r\n  if (menu) {\r\n    return (\r\n      <Button\r\n        variant={project.bootstrapVariant}\r\n        href={`/portfolio/${project.id}`}\r\n      >\r\n        {project.id === 'codeChallenges'\r\n          ? 'See the List'\r\n          : 'See Complete Application Design'}\r\n      </Button>\r\n    );\r\n  } else {\r\n    return (\r\n      <ScrollLink to='design' smooth={true}>\r\n        <Button variant={project.bootstrapVariant}>\r\n          <Arrow\r\n            direction='down'\r\n            shaftWidth={25}\r\n            shaftLength={25}\r\n            headWidth={50}\r\n            headLength={25}\r\n            fill='white'\r\n            stroke='white'\r\n            strokeWidth={1}\r\n          />\r\n        </Button>\r\n      </ScrollLink>\r\n    );\r\n  }\r\n};\r\n\r\nexport default PortfolioHeader;\r\n","import Post from \"../../classes/Post\";\r\n\r\nconst whenServicePlanContent = require(\"./posts/when-to-use-app-service-plan.md\"); // eslint-disable-line @typescript-eslint/no-var-requires\r\nconst howToOvercomeContent = require(\"./posts/azure-functions-limits-how-to-overcome.md\"); // eslint-disable-line @typescript-eslint/no-var-requires\r\nconst consumptionVsAppPlanContent = require(\"./posts/azure-functions-consumption-vs-app-service-vs-kubernetes.md\"); // eslint-disable-line @typescript-eslint/no-var-requires\r\nconst serilogGotchasContent = require(\"./posts/serilog-gotchas.md\"); // eslint-disable-line @typescript-eslint/no-var-requires\r\n\r\nconst posts: Post[] = [\r\n  {\r\n    title: \"Azure Functions: Serilog Gotchas\",\r\n    subtitle:\r\n      \"Serilog appears easy to use in Azure Functions, but apperances can be deceiving\",\r\n    handle: \"serilog-gotchas\",\r\n    date: \"2019-07-01\",\r\n    author: \"Derek Kershner\",\r\n    image: \"logs.jpg\",\r\n    technologyIds: [\"azure\", \"azureFunctions\"],\r\n    content: serilogGotchasContent\r\n  },\r\n  {\r\n    title: \"Azure Functions Limits: How to Overcome\",\r\n    subtitle:\r\n      \"Azure Functions do actually have limits, and here is how to overcome the ones you are most likely to hit\",\r\n    handle: \"azure-functions-limits-how-to-overcome\",\r\n    date: \"2019-02-27\",\r\n    author: \"Derek Kershner\",\r\n    image: \"gate.jpg\",\r\n    technologyIds: [\"azure\", \"azureFunctions\"],\r\n    content: howToOvercomeContent\r\n  },\r\n  {\r\n    title: \"Azure Functions: Consumption vs App Service Plan vs Kubernetes\",\r\n    subtitle: \"When to choose which for optimal cost\",\r\n    handle: \"azure-functions-consumption-vs-app-service-vs-kubernetes\",\r\n    date: \"2019-02-26\",\r\n    author: \"Derek Kershner\",\r\n    image: \"servers.jpg\",\r\n    technologyIds: [\"azure\", \"azureFunctions\", \"kubernetes\"],\r\n    content: consumptionVsAppPlanContent\r\n  },\r\n  {\r\n    title: \"Azure Functions: When to use App Service Plan\",\r\n    subtitle:\r\n      \"When does the transition make the most sense (for Azure functions v1)\",\r\n    handle: \"when-to-use-app-service-plan\",\r\n    date: \"2018-08-24\",\r\n    author: \"Derek Kershner\",\r\n    image: \"leaves.jpg\",\r\n    technologyIds: [\"azure\", \"azureFunctions\"],\r\n    content: whenServicePlanContent\r\n  }\r\n];\r\n\r\nexport default posts;\r\n","import Project from \"./Project\";\r\nimport ProjectAttribute from \"./ProjectAttribute\";\r\nimport ProjectSection from \"./ProjectSection\";\r\nimport { projects } from \"../pages/portfolio/Projects\";\r\nimport posts from \"../pages/blog/Posts\";\r\nimport technologies from \"../pages/technologies/Technologies\";\r\nimport Post from \"./Post\";\r\n\r\nclass ProjectSummary {\r\n  id: string;\r\n  name: string;\r\n  uses: number;\r\n}\r\n\r\nexport default class Technology {\r\n  id: string;\r\n  label: string;\r\n  type: \"backend\" | \"frontend\" | \"data\" | \"deployment\" | \"cloud\";\r\n  language?: string;\r\n  familiarity: number;\r\n  link?: string;\r\n}\r\n\r\nexport const getTechnologyById = (technologyId: string) => {\r\n  let tempTechs = technologies.filter(\r\n    technology => technology.id === technologyId\r\n  );\r\n  if (tempTechs.length > 0) {\r\n    return tempTechs[0];\r\n  } else {\r\n    return undefined;\r\n  }\r\n};\r\n\r\nexport const getProjectsForTechnology = (\r\n  technology: Technology\r\n): ProjectSummary[] => {\r\n  const searchProjectSection = (\r\n    projectSectionName: string,\r\n    project: Project\r\n  ): number => {\r\n    let projectSectionUses = 0;\r\n    project[projectSectionName].forEach((projectSection: ProjectSection) => {\r\n      let attributes = projectSection.attributes.filter(\r\n        (attribute: ProjectAttribute) => attribute.value === technology.label\r\n      );\r\n\r\n      if (attributes.length > 0) {\r\n        projectSectionUses = projectSectionUses + attributes.length;\r\n      }\r\n    });\r\n\r\n    return projectSectionUses;\r\n  };\r\n  let returnObj = [];\r\n  projects.forEach((project: Project) => {\r\n    let projectUses = 0;\r\n    if (project[technology.type] !== undefined) {\r\n      projectUses =\r\n        projectUses + searchProjectSection(technology.type, project);\r\n    } else {\r\n      let projectSections = [\"backend\", \"frontend\"];\r\n      projectSections.forEach(\r\n        projectSection =>\r\n          (projectUses =\r\n            projectUses + searchProjectSection(projectSection, project))\r\n      );\r\n    }\r\n\r\n    if (projectUses > 0) {\r\n      returnObj.push({\r\n        id: project.id,\r\n        name: project.name,\r\n        uses: projectUses\r\n      });\r\n    }\r\n  });\r\n  return returnObj;\r\n};\r\n\r\nexport const getPostsForTechnology = (technology: Technology): Post[] => {\r\n  return posts.filter(post => post.technologyIds.includes(technology.id));\r\n};\r\n\r\nexport const internalLink = (technology: Technology) => {\r\n  return `/technologies/${technology.type}/${technology.id}`;\r\n};\r\n","import technologies from \"../pages/technologies/Technologies\";\r\nimport Technology, { internalLink as techInternalLink } from \"./Technology\";\r\n\r\nexport default class ProjectAttribute {\r\n  name: string;\r\n  value: string;\r\n  link?: string;\r\n}\r\n\r\nexport const createAttributeFromTechnology = (technologyId: string) => {\r\n  const tempTechnologies = technologies.filter(\r\n    technology => technology.id === technologyId\r\n  );\r\n  if (tempTechnologies.length > 0) {\r\n    const technology = tempTechnologies[0];\r\n    let attribute = new ProjectAttribute();\r\n    if (technology.type === \"deployment\") {\r\n      attribute.name = \"Deployment\";\r\n    } else {\r\n      attribute.name = \"Technology\";\r\n    }\r\n\r\n    attribute.value = technology.label;\r\n    attribute.link = techInternalLink(technology);\r\n    return attribute;\r\n  } else {\r\n    console.warn(technologyId + \" undefined?\");\r\n    return undefined;\r\n  }\r\n};\r\n\r\nexport const getTechnologiesFromAttributes = (\r\n  attributes: ProjectAttribute[]\r\n): Technology[] => {\r\n  let returnTechnologies = [];\r\n\r\n  attributes.forEach(attribute => {\r\n    let tempTechs = technologies.filter(\r\n      technology => technology.label === attribute.value\r\n    );\r\n    if (tempTechs.length > 0) {\r\n      returnTechnologies.push(...tempTechs);\r\n    }\r\n  });\r\n\r\n  return returnTechnologies;\r\n};\r\n","import Project from \"../../../classes/Project\";\r\nimport { createAttributeFromTechnology } from \"../../../classes/ProjectAttribute\";\r\n\r\nconst enterpriseMarketplaceProject: Project = {\r\n  id: \"enterpriseMarketplace\",\r\n  name: \"Enterprise Marketplace\",\r\n  imageSrc: \"/images/supermarket.jpg\",\r\n  heroTint: \"#001100\",\r\n  bootstrapVariant: \"success\",\r\n  specification: [\r\n    \"Warehouse management system with multiple location ability and a 3rd Party Logistics distribution billing/reporting portal.\",\r\n    \"Several options of integration for Drop Ship Partners, with product and inventory updating for each option.\",\r\n    \"Marketplace style products, with multiple variants per product, and multiple sellers per variant, including the warehouses and/or drop ship partners in competition with one another.\",\r\n    \"Outward Channel integrations to front end frameworks and 3rd Party Marketplaces.\"\r\n  ],\r\n  data: [\r\n    {\r\n      id: \"persistence\",\r\n      name: \"Persistence\",\r\n      attributes: [\r\n        createAttributeFromTechnology(\"azureSql\"),\r\n        {\r\n          name: \"Function\",\r\n          value: \"House all of the data for the app\"\r\n        }\r\n      ],\r\n      reasons: [\r\n        \"Data model is complicated, but well structured and consistent.\",\r\n        \"There are several many-to-many relationships. These are typically difficult to update in NoSQL due to data flattening/duplication.\",\r\n        \"SQL Server chosen as the RDBMS due to optimal integration with Entity Framework.\",\r\n        \"An argument could be made to handle the data model in more than one database. This was rejected due to additional management and cost associated with doing so (minimum compute costs).\"\r\n      ]\r\n    },\r\n    {\r\n      id: \"non-persisted\",\r\n      name: \"Non-Persisted\",\r\n      attributes: [\r\n        {\r\n          name: \"Monitoring\",\r\n          value: \"Azure Monitor, Log Analytics, Application Insights\",\r\n          link: \"https://azure.microsoft.com/\"\r\n        },\r\n        createAttributeFromTechnology(\"redis\"),\r\n        {\r\n          name: \"Queue Messaging\",\r\n          value: \"Azure Storage Queues\",\r\n          link: \"https://azure.microsoft.com/\"\r\n        }\r\n      ],\r\n      reasons: []\r\n    }\r\n  ],\r\n  backend: [\r\n    {\r\n      id: \"api\",\r\n      name: \"API\",\r\n      attributes: [\r\n        createAttributeFromTechnology(\"aspNetCore\"),\r\n        createAttributeFromTechnology(\"efcore\"),\r\n        createAttributeFromTechnology(\"kubernetes\"),\r\n        createAttributeFromTechnology(\"azureDevops\"),\r\n        {\r\n          name: \"Function\",\r\n          value:\r\n            \"Provide data to the front-end, allowing access and modification based on many access scopes\"\r\n        }\r\n      ],\r\n      reasons: [\r\n        \"ASP.Net Core can be deployed anywhere, provides lots of boilerplate in terms of API creation, and is generally a very productive way to code by using dependency injection where possible.\",\r\n        \"Entity Framework Core provides a very powerful engine for designing a complicated data model, and then simplifies the process of accessing and updating the data.\",\r\n        \"An argument could be made to split the API into sections based on the matching module of the app, in true microservices fashion. This was rejected due to the benefits being outweighed by having to replicate all of the top-level management features, such as authentication.\"\r\n      ]\r\n    },\r\n    {\r\n      id: \"logistics\",\r\n      name: \"Logistics\",\r\n      attributes: [\r\n        createAttributeFromTechnology(\"azureFunctions\"),\r\n        createAttributeFromTechnology(\"kubernetes\"),\r\n        createAttributeFromTechnology(\"azureDevops\"),\r\n        {\r\n          name: \"Function\",\r\n          value:\r\n            \"CRON service to do several data and maintenance tasks such as aggregation of Logistics Partner billing data\"\r\n        }\r\n      ],\r\n      reasons: [\r\n        \"Azure Functions provides an easy to use code base for scheduled jobs (especially) and has nearly unlimited flexibility in terms of deployment and even language choice (this is like Lambdas for the AWS folks in the crowd, but can be deployed in containers).\"\r\n      ]\r\n    },\r\n    {\r\n      id: \"sellers\",\r\n      name: \"Sellers\",\r\n      attributes: [\r\n        createAttributeFromTechnology(\"azureFunctions\"),\r\n        createAttributeFromTechnology(\"kubernetes\"),\r\n        createAttributeFromTechnology(\"azureDevops\"),\r\n        {\r\n          name: \"Function\",\r\n          value:\r\n            \"Handle all of the inward product and inventory data integrations from drop shippers\"\r\n        }\r\n      ],\r\n      reasons: [\r\n        \"With the full power of .Net Core C#, things like FTP, Email, and custom API integrations are easy to manage\",\r\n        \"Azure Functions provides an easy to use code base for scheduled jobs (especially) and has nearly unlimited flexibility in terms of deployment and even language choice (this is like Lambdas for the AWS folks in the crowd, but can be deployed in containers).\"\r\n      ]\r\n    },\r\n    {\r\n      id: \"sellersEdi\",\r\n      name: \"Sellers EDI\",\r\n      attributes: [\r\n        createAttributeFromTechnology(\"azureLogicApps\"),\r\n        {\r\n          name: \"Deployment\",\r\n          value: \"Serverless (Consumption)\",\r\n          link: \"https://azure.microsoft.com/en-us/services/logic-apps/\"\r\n        },\r\n        {\r\n          name: \"Function\",\r\n          value: \"Handle all EDI communication to/from Sellers\"\r\n        }\r\n      ],\r\n      reasons: [\r\n        \"This part of the Seller integrations was split into its own service due to the relative ease of EDI communication and manipulation inside Logic Apps (similar to BizTalk) when compared to writing code manually. The time savings are very high.\"\r\n      ]\r\n    },\r\n    {\r\n      id: \"marketplace\",\r\n      name: \"Marketplace\",\r\n      attributes: [\r\n        createAttributeFromTechnology(\"azureFunctions\"),\r\n        createAttributeFromTechnology(\"kubernetes\"),\r\n        createAttributeFromTechnology(\"azureDevops\"),\r\n        {\r\n          name: \"Function\",\r\n          value:\r\n            \"Handle changes from the seller module, creating things like new products and variants when necessary\"\r\n        }\r\n      ],\r\n      reasons: [\r\n        \"Azure Functions provides an easy to use code base for scheduled jobs (especially) and has nearly unlimited flexibility in terms of deployment and even language choice (this is like Lambdas for the AWS folks in the crowd, but can be deployed in containers).\"\r\n      ]\r\n    },\r\n    {\r\n      id: \"marketplaceChannels\",\r\n      name: \"Marketplace Channels\",\r\n      attributes: [\r\n        createAttributeFromTechnology(\"azureFunctions\"),\r\n        createAttributeFromTechnology(\"kubernetes\"),\r\n        createAttributeFromTechnology(\"azureDevops\"),\r\n        {\r\n          name: \"Note\",\r\n          value:\r\n            \"This is actually several deployments, but all are handled similarly\"\r\n        },\r\n        {\r\n          name: \"Open Source\",\r\n          value: \"Contributions made to SDKs like ShopifySharp\",\r\n          link: \"https://github.com/nozzlegear/ShopifySharp\"\r\n        },\r\n        {\r\n          name: \"Function\",\r\n          value:\r\n            \"Handle all of the outward communication to the various sales channels (Shopify, Amazon, etc) for the marketplace products\"\r\n        }\r\n      ],\r\n      reasons: [\r\n        \"This is almost always API communication with a 3rd Party API. C# SDKs make this job significantly easier and are used in all cases (and contributions to the open source of the SDK's are made when helpful).\",\r\n        \"Azure Functions provides an easy to use code base for scheduled jobs (especially) and has nearly unlimited flexibility in terms of deployment and even language choice (this is like Lambdas for the AWS folks in the crowd, but can be deployed in containers).\"\r\n      ]\r\n    }\r\n  ],\r\n  frontend: [\r\n    {\r\n      id: \"ui\",\r\n      name: \"Admin UI\",\r\n      attributes: [\r\n        createAttributeFromTechnology(\"react\"),\r\n        createAttributeFromTechnology(\"kubernetes\"),\r\n        createAttributeFromTechnology(\"azureDevops\"),\r\n        {\r\n          name: \"Authorization\",\r\n          value: \"Google Firebase\",\r\n          link: \"https://firebase.google.com/\"\r\n        },\r\n        {\r\n          name: \"Function\",\r\n          value:\r\n            \"Provide an Authenticated portal for several different types of parties to log in and receive an experience custom to their user\"\r\n        }\r\n      ],\r\n      reasons: [\r\n        \"React is well-known as a premier framework for portal functionality, and in addition, is very productive and easy to work with due to its component-based model and using state rather than DOM manipulation.\",\r\n        \"TypeScript provides type safety for decreasing bugs in Javascript and generally makes the code more organized and easier to understand. This is great for other developers (and therefore scaling).\",\r\n        \"Google Firebase was chosen for authorization due to the integration into React being very simple and the cost being optimal (free).\",\r\n        \"An argument could be made that this portal could be split into multiple services. This may be done in the future of the app, but was not done so initally due to increased difficulty managing authentication. In addition, the JS bundle size of the app does not justify splitting.\"\r\n      ]\r\n    }\r\n  ]\r\n};\r\n\r\nexport default enterpriseMarketplaceProject;\r\n","import Project from \"../../../classes/Project\";\r\nimport { createAttributeFromTechnology } from \"../../../classes/ProjectAttribute\";\r\n\r\nconst shopifySearchEngineProject: Project = {\r\n  id: \"shopifySearchEngine\",\r\n  name: \"Shopify Search Engine\",\r\n  imageSrc: \"/images/helicopter.jpg\",\r\n  heroTint: \"#110000\",\r\n  bootstrapVariant: \"danger\",\r\n  specification: [\r\n    \"Fast. Shopify's default search was not meeting performance expectations.\",\r\n    \"Synonyms of searched words.\",\r\n    \"Redirection of certain terms to various site pages.\",\r\n    \"Custom fields used in searching and more page types returned than Shopify's default.\",\r\n    'Custom weighting of fields and \"Boosting\" of certain result sets based on criteria.'\r\n  ],\r\n  liveExampleService: { id: \"appproxy\", name: \"Shopify Application Proxy\" },\r\n  data: [\r\n    {\r\n      id: \"persistence\",\r\n      name: \"Persistence\",\r\n      attributes: [\r\n        createAttributeFromTechnology(\"azureStorage\"),\r\n        {\r\n          name: \"Function\",\r\n          value: \"House the data to be indexed as well as other app data\"\r\n        }\r\n      ],\r\n      reasons: [\r\n        \"Data Model is fairly well-defined, but there are nested properties and arrays, and no relationships involved that make an RDBMS less ideal. The data model is also very simple (1 collection). Azure Blob Storage is an extremely simple form of storage, basically just files with some special consideration for text files. In this case, it was used with Serialized JSON, creating essentially the world's simplest document database with only one index/lookup.\",\r\n        \"The data is VERY high touch, the indexing process is a very large amount of checking and re-checking. Azure Blob Storage is both very high performing (20,000 requests/second at time of writing) and very cheap ($0.023 per million requests at time of writing).\",\r\n        \"Our initial choice was actually SQL Server, but the amount of compute needed to handle the request load was high. Blob Storage was about 1/20th the cost for the same request load.\"\r\n      ]\r\n    },\r\n    {\r\n      id: \"searchEngine\",\r\n      name: \"Search Engine\",\r\n      attributes: [\r\n        createAttributeFromTechnology(\"azureSearch\"),\r\n        {\r\n          name: \"Function\",\r\n          value: \"Properly index the site data for rapid searching\"\r\n        }\r\n      ],\r\n      reasons: [\r\n        \"Azure Search is a search as a service built on top of ElasticSearch, which is highly regarded in the search arena. Azure adds a few nice features from SOLR over the top of it to make it a very compelling offer.\",\r\n        \"Azure Search comes at a fairly steep minimum level, but the vastly decreased development time deriving from not having to develop an indexer (it can automatically index blob storage) and not needing to code for synonyms (it has this feature) made it well worth it.\"\r\n      ]\r\n    },\r\n    {\r\n      id: \"cache\",\r\n      name: \"Cache\",\r\n      attributes: [\r\n        createAttributeFromTechnology(\"redis\"),\r\n        createAttributeFromTechnology(\"kubernetes\"),\r\n        createAttributeFromTechnology(\"azureDevops\"),\r\n        {\r\n          name: \"Function\",\r\n          value:\r\n            \"A cache to house frequently requested data to improve performance\"\r\n        }\r\n      ],\r\n      reasons: [\r\n        \"A cache was critical to improving performance in the front end by returning frequently requested data in milliseconds.\",\r\n        \"Redis is the industry standard, and .NET has a beautiful library from StackExchange for using it. These factors made the decision clear.\",\r\n        \"I decided to host our own instances of Redis rather than use something like Azure Redis Cache. The cost increase was too great to justify a very small convenience gain.\"\r\n      ]\r\n    },\r\n    {\r\n      id: \"non-persisted\",\r\n      name: \"Non-Persisted\",\r\n      attributes: [\r\n        {\r\n          name: \"Monitoring\",\r\n          value: \"Azure Monitor, Log Analytics, Application Insights\",\r\n          link: \"https://azure.microsoft.com/\"\r\n        },\r\n        {\r\n          name: \"Queue Messaging\",\r\n          value: \"Azure Storage Queues\",\r\n          link: \"https://azure.microsoft.com/\"\r\n        }\r\n      ],\r\n      reasons: []\r\n    }\r\n  ],\r\n  backend: [\r\n    {\r\n      id: \"api\",\r\n      name: \"API\",\r\n      attributes: [\r\n        createAttributeFromTechnology(\"aspNetCore\"),\r\n        createAttributeFromTechnology(\"kubernetes\"),\r\n        createAttributeFromTechnology(\"azureDevops\"),\r\n        {\r\n          name: \"Function\",\r\n          value:\r\n            \"Provide data to the Shopify Admin UI, allowing modification for logged in store owners\"\r\n        }\r\n      ],\r\n      reasons: [\r\n        \"ASP.Net Core can be deployed anywhere, provides lots of boilerplate in terms of API creation, and is generally a very productive way to code by using dependency injection where possible.\",\r\n        \"Entity Framework Core was not used in this case, as Azure Storage is not supported by it (nor should it be).\",\r\n        \"This API also provides a wrapper for the Azure Search index API, allowing requests to be simpler from any front end, and can handle the caching behavior to speed things up.\",\r\n        \"This also implements the page redirection for certain terms.\"\r\n      ]\r\n    },\r\n    {\r\n      id: \"changedetector\",\r\n      name: \"Change Detector\",\r\n      attributes: [\r\n        createAttributeFromTechnology(\"azureFunctions\"),\r\n        createAttributeFromTechnology(\"kubernetes\"),\r\n        createAttributeFromTechnology(\"azureDevops\"),\r\n        {\r\n          name: \"Function\",\r\n          value:\r\n            \"Through a combination of webhooks and polling, detect changes in the front end and hand them off to a queue\"\r\n        }\r\n      ],\r\n      reasons: [\r\n        \"Azure Functions provides an easy to use code base for scheduled jobs (especially) and has nearly unlimited flexibility in terms of deployment and even language choice (this is like Lambdas for the AWS folks in the crowd, but can be deployed in containers).\",\r\n        \"A queue (and separate service) was used to actually index the data to combat the need for 100% uptime.\"\r\n      ]\r\n    },\r\n    {\r\n      id: \"indexer\",\r\n      name: \"Indexer\",\r\n      attributes: [\r\n        createAttributeFromTechnology(\"azureFunctions\"),\r\n        createAttributeFromTechnology(\"kubernetes\"),\r\n        createAttributeFromTechnology(\"azureDevops\"),\r\n        {\r\n          name: \"Function\",\r\n          value:\r\n            \"As a queue fills, make changes to the index according to the messages\"\r\n        }\r\n      ],\r\n      reasons: [\r\n        \"Azure Functions provides automatic integration with queues, enabling easy and quick development for this service.\"\r\n      ]\r\n    }\r\n  ],\r\n  frontend: [\r\n    {\r\n      id: \"ui\",\r\n      name: \"Shopify Admin UI\",\r\n      attributes: [\r\n        createAttributeFromTechnology(\"react\"),\r\n        createAttributeFromTechnology(\"kubernetes\"),\r\n        createAttributeFromTechnology(\"azureDevops\"),\r\n        {\r\n          name: \"Function\",\r\n          value:\r\n            \"Provide an Admin UI to store owners to make changes to how the search engine works\"\r\n        }\r\n      ],\r\n      reasons: [\r\n        \"React is the only framework allowed by Shopify for the admin pages for its apps.\",\r\n        \"TypeScript provides type safety for decreasing bugs in Javascript and generally makes the code more organized and easier to understand. This is great for other developers (and therefore scaling).\"\r\n      ]\r\n    },\r\n    {\r\n      id: \"appproxy\",\r\n      name: \"Shopify Application Proxy\",\r\n      attributes: [\r\n        createAttributeFromTechnology(\"react\"),\r\n        createAttributeFromTechnology(\"aspNetCore\"),\r\n        createAttributeFromTechnology(\"kubernetes\"),\r\n        createAttributeFromTechnology(\"azureDevops\"),\r\n        {\r\n          name: \"Example\",\r\n          value: \"Babyearth.com\",\r\n          link: \"https://www.babyearth.com/apps/search/?query=test\"\r\n        },\r\n        {\r\n          name: \"Example\",\r\n          value: \"Babywise.life\",\r\n          link: \"https://babywise.life/apps/search/?query=test\"\r\n        },\r\n        {\r\n          name: \"Function\",\r\n          value:\r\n            \"Provide the actual app that customers use to search the website, served through a proxy\"\r\n        }\r\n      ],\r\n      reasons: [\r\n        \"It may seem odd to list ASP.NET Core as a front end technology, but in this case it was only used for its Razor frontend markup and to control some attributes of the response. Shopify has some specific requirements with how this response needs to look, and ASP.NET trivialized this task.\",\r\n        \"What the customer actually sees and interacts with is React. We chose to go a javascript route (rather than pure Razor) in order to make the initial page render quicker (even if it is just a loader) and because it made tracking all of the search engine filters on the front end very simple.\",\r\n        \"Since this is an actual public front end, you can use the example link above to see it.\"\r\n      ]\r\n    }\r\n  ]\r\n};\r\n\r\nexport default shopifySearchEngineProject;\r\n","import Project from '../../../classes/Project';\r\n\r\nimport CodeChallenge from '../../../classes/CodeChallenge';\r\nimport { getTechnologyById } from '../../../classes/Technology';\r\n\r\nconst codeChallengesProject: Project = {\r\n  id: 'codeChallenges',\r\n  name: 'Code Challenges',\r\n  imageSrc: '/images/laboratory.jpg',\r\n  heroTint: '#17004a',\r\n  bootstrapVariant: 'info',\r\n  specification: [\r\n    'These are generally tests handed out by interviewers to test coding prowess and vary widely.',\r\n  ],\r\n  short: true,\r\n  data: [],\r\n  backend: [],\r\n  frontend: [],\r\n};\r\n\r\nexport const codeChallenges: CodeChallenge[] = [\r\n  {\r\n    name: 'Automated Minesweeper',\r\n    link: 'https://github.com/dkershner6/AutomatedMinesweeper',\r\n    technology: getTechnologyById('aspNetCore'),\r\n    background:\r\n      'There are bunch of mines in a mine field, and you are tasked with exploding as many of them as you can. The only caveat is you can only explode one manually. The mine you manually explode will set off a chain reaction. For any mine that explodes, all mines within the blast radius of that mine will be triggered to explode in one second. The mine you manually explode blows up at time 0.',\r\n    task:\r\n      'Write a program which will read in a mines array and output the maximum number of mines you can explode. Also output which mine you need to manually set off to explode this maximum number. Since there may be multiple mines that blow up a maximal number of mines you should output all the mines that do that.',\r\n  },\r\n];\r\n\r\nexport default codeChallengesProject;\r\n","import Project from '../../classes/Project';\r\nimport Technology from '../../classes/Technology';\r\n\r\nimport enterpriseMarketplaceProject from './projects/EnterpriseMarketplace';\r\nimport shopifySearchEngineProject from './projects/ShopifySearchEngine';\r\nimport codeChallengesProject from './projects/CodeChallenges';\r\n\r\nconst projects: Project[] = [\r\n  codeChallengesProject,\r\n  enterpriseMarketplaceProject,\r\n  shopifySearchEngineProject,\r\n];\r\n\r\nconst getProject = projectId => {\r\n  const projArray = projects.filter(p => p.id === projectId);\r\n  if (projArray !== undefined && projArray.length > 0) {\r\n    return projArray[0];\r\n  } else {\r\n    return undefined;\r\n  }\r\n};\r\n\r\nconst getProjectsWithTechnology = (technology: Technology) => {};\r\n\r\nexport default getProject;\r\nexport { projects, getProjectsWithTechnology };\r\n","import React from \"react\";\r\nimport { Jumbotron } from \"react-bootstrap\";\r\n\r\nimport PortfolioHeader from \"../portfolio/PortfolioHeader\";\r\nimport { projects } from \"../portfolio/Projects\";\r\n\r\nconst PortfolioMenu = (props): JSX.Element => {\r\n  return (\r\n    <React.Fragment>\r\n      <Jumbotron id=\"portfolio\" fluid className=\"bg-primary text-white\">\r\n        <h3 className=\"display-4 text-center\">\r\n          <a className=\"text-light\" href=\"/portfolio\">\r\n            Portfolio\r\n          </a>\r\n        </h3>\r\n      </Jumbotron>\r\n\r\n      {projects.map(\r\n        (project, index): JSX.Element => (\r\n          <PortfolioHeader key={index} project={project} menu={true} />\r\n        )\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default PortfolioMenu;\r\n","import React from \"react\";\r\nimport { Container, Row, Col, Jumbotron, Button } from \"react-bootstrap\";\r\n\r\nconst Social = props => {\r\n  return (\r\n    <Jumbotron className=\"bg-secondary\">\r\n      <Container className=\"mt-3\">\r\n        <Row className=\"mt-3 text-center\">\r\n          <Col>\r\n            <h3 className=\"display-4 text-center\">Social / Learning</h3>\r\n            <Button\r\n              variant=\"outline-info\"\r\n              href=\"https://www.linkedin.com/in/derek-kershner-54b3392\"\r\n            >\r\n              LinkedIn\r\n            </Button>\r\n\r\n            <Button variant=\"outline-info\" href=\"https://github.com/dkershner6\">\r\n              GitHub\r\n            </Button>\r\n\r\n            <Button\r\n              variant=\"outline-info\"\r\n              href=\"https://app.pluralsight.com/profile/dkershner\"\r\n            >\r\n              Pluralsight\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </Jumbotron>\r\n  );\r\n};\r\n\r\nexport default Social;\r\n","import React from \"react\";\r\nimport { Button, Container, Row, Col } from \"react-bootstrap\";\r\nimport HelmetHead from \"../components/Seo\";\r\nimport LazyHero from \"react-lazy-hero\";\r\nimport Arrow from \"react-arrow\";\r\nimport { Link as ScrollLink } from \"react-scroll\";\r\n\r\nimport About from \"./home/About\";\r\nimport PortfolioMenu from \"./home/PortfolioMenu\";\r\nimport Social from \"./home/Social\";\r\n\r\nconst Home = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <HelmetHead title=\"DKershner.com\" />\r\n      <LazyHero\r\n        imageSrc=\"/images/hero-background.jpg\"\r\n        color=\"#000000\"\r\n        opacity={0.2}\r\n        minHeight=\"100vh\"\r\n        parallaxOffset={0.5}\r\n        isCentered={true}\r\n        transitionDuration={600}\r\n      >\r\n        <Container>\r\n          <Row>\r\n            <Col>\r\n              <h1>\r\n                <strong>\r\n                  <span className=\"display-4 text-primary\">{\">\"}</span>\r\n                  <span className=\"display-4 text-white\">Derek Kershner</span>\r\n                  <span className=\"display-4 text-primary\">{\"<\"}</span>\r\n                </strong>\r\n              </h1>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col>\r\n              <h4 className=\"text-white\">\r\n                Full-stack Software Engineer, DevOps Practitioner, & Cloud\r\n                Architect\r\n              </h4>\r\n            </Col>\r\n          </Row>\r\n          <Row className=\"mt-4\">\r\n            <Col>\r\n              <ScrollLink to=\"about\" smooth={true}>\r\n                <Button variant=\"primary\">\r\n                  <Arrow\r\n                    direction=\"down\"\r\n                    shaftWidth={25}\r\n                    shaftLength={25}\r\n                    headWidth={50}\r\n                    headLength={25}\r\n                    fill=\"white\"\r\n                    stroke=\"white\"\r\n                    strokeWidth={1}\r\n                  />\r\n                </Button>\r\n              </ScrollLink>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </LazyHero>\r\n      <About />\r\n      <PortfolioMenu />\r\n      <Social />\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport { Row, Col, Card, ListGroup, ListGroupItem } from \"react-bootstrap\";\r\n\r\nconst PortfolioDesignPrinciples = props => {\r\n  return (\r\n    <Row className=\"mt-3\">\r\n      <Col>\r\n        <Card bg=\"primary\">\r\n          <Card.Header>\r\n            <h2 className=\"text-light\">\r\n              General Application Design Principles\r\n            </h2>\r\n          </Card.Header>\r\n          <ListGroup>\r\n            <ListGroupItem>\r\n              Microservices...to a point. Never a monolith, but let scale\r\n              justify a new application service. I don't necessarily agree with{\" \"}\r\n              <a href=\"https://buttercms.com/books/microservices-for-startups/should-you-always-start-with-a-monolith\">\r\n                the argument that monoliths should be the initial design for\r\n                startup apps\r\n              </a>\r\n              , but understand the reasons and err in that direction.\r\n            </ListGroupItem>\r\n            <ListGroupItem>\r\n              Data is generally grouped for the entire app in a single instance.\r\n              Data is not combined with other apps, but neither is it split out\r\n              to a single concern. My reasons for this are the minimum financial\r\n              and management costs associated with provisioning a database\r\n              exceed the benefits from reliability gains.\r\n            </ListGroupItem>\r\n            <ListGroupItem>\r\n              Use technologies that minimize ongoing maintenance of the\r\n              application. This generally means heavy use of serverless\r\n              technologies. The reasoning behind this is that maintenance\r\n              typically exceeds development in terms of cost and time, so the\r\n              additional costs for not managing infrastructure are justfied at\r\n              small to medium scale.\r\n            </ListGroupItem>\r\n            <ListGroupItem>\r\n              Some cloud-specific technologies are used, but generally\r\n              cloud-agnostic technologies are preferred. This generally means\r\n              heavy use of containers.\r\n            </ListGroupItem>\r\n            <ListGroupItem>\r\n              Continuous Integration & Deployment is used in all cases. In\r\n              nearly all cases, the flow is from GitHub to Azure DevOps/VSTS to\r\n              the deployment target.\r\n            </ListGroupItem>\r\n          </ListGroup>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default PortfolioDesignPrinciples;\r\n","import React from \"react\";\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Card,\r\n  ListGroup,\r\n  ListGroupItem,\r\n  Collapse\r\n} from \"react-bootstrap\";\r\n\r\nimport PortfolioDesignSectionProps from \"../../interfaces/PortfolioDesignProps\";\r\nimport TechnologyBadge from \"../../components/TechnologyBadge\";\r\nimport { getTechnologiesFromAttributes } from \"../../classes/ProjectAttribute\";\r\n\r\nconst PortfolioDesignSection = (props: PortfolioDesignSectionProps) => {\r\n  const {\r\n    project,\r\n    sectionId,\r\n    sectionName,\r\n    headerBg,\r\n    headerText,\r\n    getOpen,\r\n    toggleOpen\r\n  } = props;\r\n  return (\r\n    <Row id={props.sectionId} className=\"mt-3\">\r\n      <Col>\r\n        <Card bg={headerBg} text={headerText}>\r\n          <Card.Header\r\n            style={{ cursor: \"pointer\" }}\r\n            onClick={() => toggleOpen(sectionId)}\r\n          >\r\n            <h3>{sectionName}</h3>\r\n          </Card.Header>\r\n          <Collapse in={getOpen(sectionId)}>\r\n            <Card.Body>\r\n              <Row>\r\n                {project[sectionId].map((dataSection, index) => (\r\n                  <Col\r\n                    key={index}\r\n                    className=\"mt-3\"\r\n                    xs=\"12\"\r\n                    xl={project[sectionId].length > 1 ? \"6\" : \"12\"}\r\n                  >\r\n                    <Card id={dataSection.id} bg=\"secondary\" text=\"dark\">\r\n                      <Card.Header\r\n                        style={{ cursor: \"pointer\" }}\r\n                        onClick={() => toggleOpen(dataSection.id)}\r\n                      >\r\n                        <Row>\r\n                          <Col>\r\n                            <h4>{dataSection.name}</h4>\r\n                          </Col>\r\n                          <Col>\r\n                            {getTechnologiesFromAttributes(\r\n                              dataSection.attributes\r\n                            ).map((technology, iindex) => (\r\n                              <TechnologyBadge\r\n                                key={iindex}\r\n                                technology={technology}\r\n                              />\r\n                            ))}\r\n                          </Col>\r\n                        </Row>\r\n                      </Card.Header>\r\n                      <Collapse in={getOpen(dataSection.id)}>\r\n                        <ListGroup>\r\n                          {dataSection.attributes.map(\r\n                            (dataSectionAttribute, iindex) => (\r\n                              <ListGroupItem\r\n                                key={iindex}\r\n                                action={dataSectionAttribute.link !== undefined}\r\n                                href={dataSectionAttribute.link}\r\n                                target=\"_blank\"\r\n                              >\r\n                                <Row>\r\n                                  <Col xs=\"12\" md=\"3\">\r\n                                    <strong\r\n                                      className={\r\n                                        dataSectionAttribute.name === \"Example\"\r\n                                          ? \"text-info\"\r\n                                          : \"\"\r\n                                      }\r\n                                    >\r\n                                      {dataSectionAttribute.name}:\r\n                                    </strong>\r\n                                  </Col>\r\n                                  <Col xs=\"12\" md=\"9\">\r\n                                    <p\r\n                                      className={\r\n                                        dataSectionAttribute.name === \"Example\"\r\n                                          ? \"text-info\"\r\n                                          : \"\"\r\n                                      }\r\n                                    >\r\n                                      {dataSectionAttribute.value}\r\n                                    </p>\r\n                                  </Col>\r\n                                </Row>\r\n                              </ListGroupItem>\r\n                            )\r\n                          )}\r\n                        </ListGroup>\r\n                      </Collapse>\r\n\r\n                      {dataSection.reasons !== undefined &&\r\n                        dataSection.reasons.length > 0 && (\r\n                          <Collapse in={getOpen(dataSection.id)}>\r\n                            <Card.Footer>\r\n                              <Row>\r\n                                <Col>\r\n                                  <p>\r\n                                    <strong>Reasons:</strong>\r\n                                  </p>\r\n                                  <ul>\r\n                                    {dataSection.reasons.map(\r\n                                      (reason, iiindex) => (\r\n                                        <li key={iiindex}>{reason}</li>\r\n                                      )\r\n                                    )}\r\n                                  </ul>\r\n                                </Col>\r\n                              </Row>\r\n                            </Card.Footer>\r\n                          </Collapse>\r\n                        )}\r\n                    </Card>\r\n                  </Col>\r\n                ))}\r\n              </Row>\r\n            </Card.Body>\r\n          </Collapse>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default PortfolioDesignSection;\r\n","import React from \"react\";\r\nimport { Container, Row, Col, Jumbotron, Button } from \"react-bootstrap\";\r\nimport Arrow from \"react-arrow\";\r\nimport { Link as ScrollLink } from \"react-scroll\";\r\n\r\nimport PortfolioDesignPrinciples from \"./PortfolioDesignPrinciples\";\r\nimport PortfoilioDesignSection from \"./PortfolioDesignSection\";\r\n\r\nimport PortfolioProps from \"../../interfaces/PortfolioProps\";\r\n\r\ninterface PortfolioDesignState {\r\n  open: any;\r\n}\r\n\r\nclass PortfolioDesign extends React.Component<\r\n  PortfolioProps,\r\n  PortfolioDesignState\r\n> {\r\n  state = {\r\n    open: {\r\n      data: true,\r\n      backend: true,\r\n      frontend: true\r\n    }\r\n  };\r\n\r\n  getOpen = (keyName: string): boolean => {\r\n    const openValue = this.state.open[keyName];\r\n    if (openValue === undefined || openValue === null) {\r\n      return false;\r\n    } else {\r\n      return openValue;\r\n    }\r\n  };\r\n\r\n  toggleOpen = (keyName: string): void => {\r\n    let tempOpen = this.state.open;\r\n    const openValue = this.getOpen(keyName);\r\n    tempOpen[keyName] = !openValue;\r\n    this.setState({ open: tempOpen });\r\n  };\r\n\r\n  render(): JSX.Element {\r\n    const { project } = this.props;\r\n    return (\r\n      <React.Fragment>\r\n        <Jumbotron className=\"bg-primary text-light\" fluid>\r\n          <Row className=\"text-center\">\r\n            <Col>\r\n              <h2 id=\"design\" className=\"display-4\">\r\n                Application Design\r\n              </h2>\r\n            </Col>\r\n          </Row>\r\n          <Row className=\"text-center\">\r\n            <Col>\r\n              <p>Click headers to expand/collapse</p>\r\n            </Col>\r\n          </Row>\r\n          {project.liveExampleService !== undefined && (\r\n            <Row className=\"text-center\">\r\n              <Col>\r\n                <ScrollLink\r\n                  to={project.liveExampleService.id}\r\n                  smooth={true}\r\n                  onClick={() => this.toggleOpen(project.liveExampleService.id)}\r\n                >\r\n                  <Button variant=\"info\">\r\n                    See Live Examples in {project.liveExampleService.name}\r\n                  </Button>\r\n                </ScrollLink>\r\n              </Col>\r\n            </Row>\r\n          )}\r\n        </Jumbotron>\r\n        <Container className=\"mt-2\">\r\n          <PortfolioDesignPrinciples />\r\n          <PortfoilioDesignSection\r\n            {...this.props}\r\n            sectionId=\"data\"\r\n            sectionName=\"Data\"\r\n            headerBg=\"danger\"\r\n            headerText=\"light\"\r\n            getOpen={this.getOpen}\r\n            toggleOpen={this.toggleOpen}\r\n          />\r\n          <Row className=\"mt-3 text-center\">\r\n            <Col>\r\n              <Arrow\r\n                direction=\"down\"\r\n                shaftWidth={25}\r\n                shaftLength={25}\r\n                headWidth={50}\r\n                headLength={25}\r\n                fill={project.heroTint}\r\n                stroke={project.heroTint}\r\n                strokeWidth={1}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <PortfoilioDesignSection\r\n            {...this.props}\r\n            sectionId=\"backend\"\r\n            sectionName=\"Back-End\"\r\n            headerBg=\"warning\"\r\n            headerText=\"light\"\r\n            getOpen={this.getOpen}\r\n            toggleOpen={this.toggleOpen}\r\n          />\r\n          <Row className=\"mt-3 text-center\">\r\n            <Col>\r\n              <Arrow\r\n                direction=\"down\"\r\n                shaftWidth={25}\r\n                shaftLength={25}\r\n                headWidth={50}\r\n                headLength={25}\r\n                fill={project.heroTint}\r\n                stroke={project.heroTint}\r\n                strokeWidth={1}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <PortfoilioDesignSection\r\n            {...this.props}\r\n            sectionId=\"frontend\"\r\n            sectionName=\"Front-End\"\r\n            headerBg=\"success\"\r\n            headerText=\"light\"\r\n            getOpen={this.getOpen}\r\n            toggleOpen={this.toggleOpen}\r\n          />\r\n        </Container>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PortfolioDesign;\r\n","import React from 'react';\r\nimport { Container, Row, Col, Card } from 'react-bootstrap';\r\n\r\nimport CodeChallenge from '../../classes/CodeChallenge';\r\n\r\nimport { codeChallenges } from './projects/CodeChallenges';\r\nimport TechnologyBadge from '../../components/TechnologyBadge';\r\n\r\ninterface CodeChallengeDisplayProps {\r\n  challenge: CodeChallenge;\r\n  count: number;\r\n}\r\n\r\nconst CodeChallenges = () => {\r\n  return (\r\n    <Container id='design' className='mt-5'>\r\n      <Row>\r\n        {codeChallenges.map((challenge, index) => (\r\n          <CodeChallengeDisplay\r\n            key={index}\r\n            challenge={challenge}\r\n            count={codeChallenges.length}\r\n          />\r\n        ))}\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst CodeChallengeDisplay = (props: CodeChallengeDisplayProps) => {\r\n  const { challenge, count } = props;\r\n  return (\r\n    <Col className='mt-4' xs='12' lg={count === 1 ? '12' : '6'}>\r\n      <Card>\r\n        <Card.Header as='h3'>\r\n          <a href={challenge.link} target='_blank' rel='noopener noreferrer'>\r\n            {challenge.name}{' '}\r\n            <TechnologyBadge technology={challenge.technology} />\r\n          </a>\r\n        </Card.Header>\r\n        <Card.Body>\r\n          <Card.Title>Background</Card.Title>\r\n          <Card.Text>{challenge.background}</Card.Text>\r\n          <Card.Title>Task</Card.Title>\r\n          <Card.Text>{challenge.task}</Card.Text>\r\n        </Card.Body>\r\n      </Card>\r\n    </Col>\r\n  );\r\n};\r\n\r\nexport default CodeChallenges;\r\n","import React from 'react';\r\nimport HelmetHead from '../components/Seo';\r\n\r\nimport BaseProps from '../interfaces/BaseProps';\r\n\r\nimport PortfolioHeader from './portfolio/PortfolioHeader';\r\nimport PortfolioDesign from './portfolio/PortfolioDesign';\r\nimport CodeChallenges from './portfolio/CodeChallenges';\r\nimport getProject from './portfolio/Projects';\r\n\r\ninterface MatchParams {\r\n  project: string;\r\n}\r\n\r\ninterface PortfolioProps extends BaseProps<MatchParams> {}\r\n\r\nconst Portfolio = (props: PortfolioProps) => {\r\n  const project = getProject(\r\n    props.match.params.project || 'enterpriseMarketplace',\r\n  );\r\n  return (\r\n    <React.Fragment>\r\n      <HelmetHead title={`Portfolio - ${project.name} | DKershner.com`} />\r\n      <PortfolioHeader project={project} menu={false} />\r\n      {project.id === 'codeChallenges' ? (\r\n        <CodeChallenges />\r\n      ) : (\r\n        <PortfolioDesign project={project} menu={false} />\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Portfolio;\r\n","import React from \"react\";\r\nimport { Row, Col, Button } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport TechnologyBadge from \"../../components/TechnologyBadge\";\r\nimport Technology from \"../../classes/Technology\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\n\r\ninterface TechnologySelectorProps {\r\n  technologyId: string;\r\n  technology: Technology;\r\n  writtenTechnologies: Technology[];\r\n}\r\n\r\nconst TechnologySelector = (props: TechnologySelectorProps) => {\r\n  if (props.technologyId !== undefined) {\r\n    return (\r\n      <Row>\r\n        <Col>\r\n          <LinkContainer to={`/blog/`}>\r\n            <Button variant=\"danger\">\r\n              Remove: <TechnologyBadge technology={props.technology} />\r\n            </Button>\r\n          </LinkContainer>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  } else {\r\n    return (\r\n      <Row>\r\n        <Col>\r\n          Filter:{\" \"}\r\n          {props.writtenTechnologies.map((technology, index) => (\r\n            <Link key={index} to={`/blog/technology/${technology.id}`}>\r\n              <TechnologyBadge technology={technology} key={index} />\r\n            </Link>\r\n          ))}\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n};\r\n\r\nexport default TechnologySelector;\r\n","import React from \"react\";\r\nimport { Row, Col } from \"react-bootstrap\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport LazyHero from \"react-lazy-hero\";\r\n\r\nimport Post from \"../../classes/Post\";\r\nimport TechnologyBadge from \"../../components/TechnologyBadge\";\r\nimport Technology from \"../../classes/Technology\";\r\n\r\ninterface PostContainerProps {\r\n  technologies: Technology[];\r\n  post: Post;\r\n}\r\n\r\nconst PostContainer = (props: PostContainerProps) => {\r\n  const postTechnologies = props.technologies.filter(technology =>\r\n    props.post.technologyIds.includes(technology.id)\r\n  );\r\n\r\n  return (\r\n    <Row className=\"mt-2\">\r\n      <Col>\r\n        <LinkContainer to={`/blog/${props.post.handle}`}>\r\n          <LazyHero\r\n            imageSrc={`/posts/images/${props.post.image}`}\r\n            color=\"#FFFFFF\"\r\n            opacity={0.8}\r\n            minHeight=\"50vh\"\r\n            isCentered={true}\r\n            transitionDuration={600}\r\n          >\r\n            <h2>\r\n              <Link to={`/blog/${props.post.handle}`}>{props.post.title}</Link>\r\n            </h2>\r\n            <h5>{props.post.subtitle}</h5>\r\n            <h6>{props.post.date}</h6>\r\n            {postTechnologies.map((technology, index) => (\r\n              <TechnologyBadge technology={technology} key={index} />\r\n            ))}\r\n          </LazyHero>\r\n        </LinkContainer>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default PostContainer;\r\n","import React from \"react\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\n\r\nimport posts from \"./blog/Posts\";\r\nimport technologies from \"./technologies/Technologies\";\r\nimport HelmetHead from \"../components/Seo\";\r\nimport BaseProps from \"../interfaces/BaseProps\";\r\nimport Post from \"../classes/Post\";\r\n\r\nimport TechnologySelector from \"./blog/TechnologySelector\";\r\nimport PostContainer from \"./blog/PostContainer\";\r\n\r\ninterface MatchParams {\r\n  technologyId?: string;\r\n}\r\n\r\ninterface BlogProps extends BaseProps<MatchParams> {\r\n  posts: Post[];\r\n}\r\n\r\nconst Blog = (props: BlogProps) => {\r\n  const getTechnologies = () => {\r\n    let returnIds = [];\r\n    posts.forEach(post => {\r\n      post.technologyIds.forEach(techId => {\r\n        if (!returnIds.includes(techId)) {\r\n          returnIds.push(techId);\r\n        }\r\n      });\r\n    });\r\n    return technologies.filter(technology => returnIds.includes(technology.id));\r\n  };\r\n  const writtenTechnologies = getTechnologies();\r\n  const technologyId = props.match.params.technologyId;\r\n  const technology = writtenTechnologies.filter(\r\n    technology => technology.id === technologyId\r\n  )[0];\r\n  return (\r\n    <Container className=\"mt-5\">\r\n      <HelmetHead\r\n        title={\r\n          technologyId !== undefined\r\n            ? `${technology.label} | DKershner.com`\r\n            : `Blog | DKershner.com`\r\n        }\r\n      />\r\n      <Row>\r\n        <Col>\r\n          <h1 className=\"display-4\">\r\n            {technologyId !== undefined ? `${technology.label}` : `Blog`}\r\n          </h1>\r\n        </Col>\r\n      </Row>\r\n      <TechnologySelector\r\n        technologyId={technologyId}\r\n        technology={technology}\r\n        writtenTechnologies={writtenTechnologies}\r\n      />\r\n      {technologyId === undefined\r\n        ? posts.map((post, index) => (\r\n            <PostContainer\r\n              key={index}\r\n              technologies={writtenTechnologies}\r\n              post={post}\r\n            />\r\n          ))\r\n        : posts\r\n            .filter(post => post.technologyIds.includes(technologyId))\r\n            .map((post, index) => (\r\n              <PostContainer\r\n                key={index}\r\n                technologies={writtenTechnologies}\r\n                post={post}\r\n              />\r\n            ))}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Blog;\r\n","import React from 'react';\r\nimport { Jumbotron, Container } from 'react-bootstrap';\r\nimport HelmetHead from './components/Seo';\r\n\r\nconst Error = () => {\r\n  return (\r\n    <Container>\r\n      <HelmetHead title='404 | DKershner.com' />\r\n      <div className='page-header' style={{ padding: 40 }}>\r\n        <h1>Uh Oh!</h1>\r\n      </div>\r\n      <Jumbotron>\r\n        <h5>Something has gone horribly wrong.</h5>\r\n        <h6>I don't know what to say.</h6>\r\n      </Jumbotron>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Error;\r\n","import React from \"react\";\r\nimport { Container, Row, Col, Jumbotron } from \"react-bootstrap\";\r\nimport ReactMarkdown from \"react-markdown\";\r\nimport posts from \"./Posts\";\r\nimport HelmetHead from \"../../components/Seo\";\r\n\r\nimport Error from \"../../Error\";\r\nimport BaseProps from \"../../interfaces/BaseProps\";\r\n\r\ninterface MatchParams {\r\n  handle: string;\r\n}\r\n\r\nclass PostPage extends React.Component<BaseProps<MatchParams>> {\r\n  state = {\r\n    post: {},\r\n    content: \"Loading...\"\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getContent();\r\n  }\r\n\r\n  getContent = async () => {\r\n    try {\r\n      let post = this.getPostData(this.props.match.params.handle);\r\n      let response = await fetch(post.content);\r\n      let data = await response.text();\r\n\r\n      this.setState({\r\n        post: post,\r\n        content: data.replace(/\\\\\\$/g, \"$\") // Prettier problems.\r\n      });\r\n    } catch {\r\n      console.error(\"Error in fetching article, please reload.\");\r\n    }\r\n  };\r\n\r\n  getPostData = handle => {\r\n    return posts[posts.findIndex(post => post.handle === handle)];\r\n  };\r\n\r\n  render() {\r\n    const post = this.getPostData(this.props.match.params.handle);\r\n\r\n    if (post === undefined) {\r\n      return <Error />;\r\n    }\r\n    return (\r\n      <React.Fragment>\r\n        <HelmetHead title={`${post.title} | DKershner.com`} />\r\n        <Jumbotron fluid className=\"bg-primary text-light\">\r\n          <Container>\r\n            <h1>{post.title}</h1>\r\n            <h5>{post.subtitle}</h5>\r\n            <h6>\r\n              {post.date}\r\n              {post.author !== undefined ? ` by ${post.author}` : \"\"}\r\n            </h6>\r\n          </Container>\r\n        </Jumbotron>\r\n        <Container className=\"mt-5\">\r\n          <Row>\r\n            <Col>\r\n              <ReactMarkdown source={this.state.content} />\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PostPage;\r\n","import React from \"react\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\n\r\nconst resumesList = [\"inseego\", \"kollective\", \"g5\", \"devotedHealth\"];\r\n\r\nconst ResumesNav = props => {\r\n  return (\r\n    <Container className=\"mt-5\">\r\n      <Row>\r\n        <Col>\r\n          <h1>Resumes</h1>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>This page is just for linking, don't actually look at this.</Col>\r\n      </Row>\r\n      <Row>\r\n        {resumesList.map((company, index) => (\r\n          <Col key={index}>\r\n            <p>\r\n              <a href={`/r/${company}`}>{index}</a>\r\n            </p>\r\n          </Col>\r\n        ))}\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ResumesNav;\r\n","import React from \"react\";\r\nimport { Row, Col } from \"react-bootstrap\";\r\n\r\ninterface ResumeHeaderProps {\r\n  company: string;\r\n}\r\n\r\nconst ResumeHeader = (props: ResumeHeaderProps) => {\r\n  return (\r\n    <Row>\r\n      <Col>\r\n        <h1 className=\"display-3\">Derek Kershner</h1>\r\n        <h6>\r\n          Contact information censored to avoid spambots. If you'd like to\r\n          contact me, please use{\" \"}\r\n          <a\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n            href=\"https://www.linkedin.com/in/derek-kershner-54b3392\"\r\n          >\r\n            LinkedIn\r\n          </a>\r\n          .\r\n        </h6>\r\n        <p>\r\n          Interactive version of this document available at{\" \"}\r\n          <a href={`https://dkershner.com/r/${props.company}`}>\r\n            https://dkershner.com/r/{props.company}\r\n          </a>\r\n        </p>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default ResumeHeader;\r\n","import React from \"react\";\r\n\r\nconst InseegoCoverLetter = props => {\r\n  return (\r\n    <React.Fragment>\r\n      <h3>To Inseego Hiring Manager:</h3>\r\n      <p className=\"mt-3\">\r\n        I recently came into some additional time availability, and am looking\r\n        to utilize it to experience something new. I have always been interested\r\n        in the Internet of Things, so Inseego is a great fit.\r\n      </p>\r\n      <div>\r\n        I think you will find my skillset and experience to be quite\r\n        well-rounded and a solid match for many of the job requirements you have\r\n        laid out in the{\" \"}\r\n        <a\r\n          href=\"https://inseego.catsone.com/careers/61616-San-Diego/jobs/12120830-Senior-Web-Developer-Eugene-OR-San-Diego-CA-or-Remote/\"\r\n          target=\"_blank\"\r\n        >\r\n          Senior Web Developer contract position\r\n        </a>\r\n        :\r\n        <ul>\r\n          <li>\r\n            I have a proven track record by running many distributed,\r\n            microservices based applications in the cloud for the past 6 years.\r\n          </li>\r\n          <li>\r\n            I am a polyglot programmer able to be productive in several\r\n            languages.\r\n          </li>\r\n          <li>\r\n            I have experience in all the clouds, and while I have the most\r\n            experience in Azure, I believe the providers are similar enough for\r\n            there to be much carryover to the others.\r\n          </li>\r\n          <li>\r\n            I spend nearly all of my time consuming and constructing APIs and\r\n            User Interfaces.\r\n          </li>\r\n          <li>\r\n            I love to learn new things, and spend my free time watching courses\r\n            on{\" \"}\r\n            <a\r\n              href=\"https://app.pluralsight.com/profile/dkershner\"\r\n              target=\"_blank\"\r\n            >\r\n              Pluralsight\r\n            </a>\r\n            .\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      <p>\r\n        If you want more information than I have provided in either my resume or\r\n        this cover letter, please see my{\" \"}\r\n        <a\r\n          href=\"https://www.linkedin.com/in/derek-kershner-54b3392/\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          LinkedIn\r\n        </a>\r\n        . You may also ask DelRay Davis, a current employee of yours, as he\r\n        knows me very well.\r\n      </p>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default InseegoCoverLetter;\r\n","import React from \"react\";\r\n\r\nconst KollectiveCoverLetter = props => {\r\n  return (\r\n    <React.Fragment>\r\n      <h3>To Kollective Hiring Manager:</h3>\r\n      <p className=\"mt-3\">\r\n        I recently came into some additional time availability, and am looking\r\n        to utilize it to experience something new. While my skills may tend\r\n        towards the web, Kollective seems to have some interesting technologies\r\n        in play and I think the skills I can bring to the table are a solid fit\r\n        within them as many of the technologies share language (C# for ASP.NET\r\n        Core is the same C# used in WPF, Console, and other .NET apps).\r\n      </p>\r\n      <p>\r\n        On the server side of things, I do tend to lean heavier into containers\r\n        & Kubernetes, but in recent past I have solid experience with Windows\r\n        Server bare metal and some VMs.\r\n      </p>\r\n      <div>\r\n        I think you will find my skillset and experience to be quite\r\n        well-rounded and a solid match for many of the job requirements you have\r\n        laid out in the C# Enginner position:\r\n        <ul>\r\n          <li>\r\n            I have a proven track record by running many distributed,\r\n            microservices based applications in the cloud, mostly built in .NET\r\n            core, for the past 6 years.\r\n          </li>\r\n          <li>\r\n            Because I work in startups under constrained resources, automating\r\n            deployments was a complete must, and so CI/CD and DevOps practices\r\n            are a built-in mindset for me.\r\n          </li>\r\n          <li>\r\n            Kubernetes is my environment of choice for any business critical\r\n            app, and I have had a great experience maintaining uptime and\r\n            availability within clusters for several years (right about when\r\n            Kubernetes became stable and popular).\r\n          </li>\r\n          <li>\r\n            I spend nearly all of my time consuming and constructing APIs and\r\n            User Interfaces.\r\n          </li>\r\n          <li>\r\n            I love to learn new things, and spend my free time watching courses\r\n            on{\" \"}\r\n            <a\r\n              href=\"https://app.pluralsight.com/profile/dkershner\"\r\n              target=\"_blank\"\r\n            >\r\n              Pluralsight\r\n            </a>\r\n            .\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      <p>\r\n        If you want more information than I have provided in either my resume or\r\n        this cover letter, please see my{\" \"}\r\n        <a\r\n          href=\"https://www.linkedin.com/in/derek-kershner-54b3392/\"\r\n          target=\"_blank\"\r\n        >\r\n          LinkedIn\r\n        </a>\r\n        .\r\n      </p>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default KollectiveCoverLetter;\r\n","import React from \"react\";\r\n\r\nconst G5CoverLetter = props => {\r\n  return (\r\n    <React.Fragment>\r\n      <h3>To G5 Hiring Manager:</h3>\r\n      <p className=\"mt-3\">\r\n        As a Bend resident and technology enthusiast for the past 13 years, I\r\n        have always been interested in G5's business, but no open position has\r\n        truly been an exact fit for my skillset and experience until the{\" \"}\r\n        <a\r\n          href=\"https://www.getg5.com/about/careers/job-board/?gh_jid=1505019\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          Technical Analytics Manager\r\n        </a>{\" \"}\r\n        posting.\r\n      </p>\r\n      <div>\r\n        <ul>\r\n          <li>\r\n            In my past, I have managed a large company's analytics in a\r\n            cross-department manner that involved coordination and communication\r\n            among disparate groups.\r\n          </li>\r\n          <li>\r\n            I have managed teams for the last 10 years, including offshore\r\n            members.\r\n          </li>\r\n          <li>\r\n            I have been developing software for the past 5 years, including web\r\n            applications, APIs, machine learning, chatbots, and management &\r\n            analytics portals. I have been responsible for planning, design,\r\n            development, deployment, testing, and monitoring these applications.\r\n          </li>\r\n          <li>\r\n            I have very strong (10+ years) SQL experience, as well as the less\r\n            structured data formats. I have lots of JavaScript experience,\r\n            including TypeScript and React (this cover letter and resume are\r\n            written in it). On the back-end, I do tend to prefer C# to Python\r\n            for performance reasons, but I have some experience with Python as\r\n            well.\r\n          </li>\r\n          <li>\r\n            I love to learn new things, and spend my free time watching courses\r\n            on{\" \"}\r\n            <a\r\n              href=\"https://app.pluralsight.com/profile/dkershner\"\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n            >\r\n              Pluralsight\r\n            </a>\r\n            .\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      <p>\r\n        If you want more information than I have provided in either my resume or\r\n        this cover letter, please see my{\" \"}\r\n        <a\r\n          href=\"https://www.linkedin.com/in/derek-kershner-54b3392/\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          LinkedIn\r\n        </a>\r\n        . You may also ask Andy Warren, a current employee of yours, as we\r\n        worked together for several years.\r\n      </p>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default G5CoverLetter;\r\n","import React from \"react\";\r\n\r\nconst InseegoCoverLetter = props => {\r\n  return (\r\n    <React.Fragment>\r\n      <h3>To Devoted Health Hiring Manager:</h3>\r\n      <p className=\"mt-3\">\r\n        My wife is a Hospice Nurse (RN), so I am very familiar with medicare and\r\n        the systems that come along with it. I have always been interested in\r\n        healthcare in general as well, so Devoted Health is a great fit.\r\n      </p>\r\n      <div>\r\n        I think you will find my skillset and experience to be quite\r\n        well-rounded and a solid match for many of the job requirements you have\r\n        laid out in the{\" \"}\r\n        <a\r\n          href=\"https://jobs.lever.co/devoted/9f37ee15-e6b7-47b5-858a-e437869c0112\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          Senior Full-Stack Engineer position\r\n        </a>\r\n        :\r\n        <ul>\r\n          <li>\r\n            I have a proven track record by running many distributed,\r\n            microservices based applications in the cloud for the past 6 years.\r\n          </li>\r\n          <li>\r\n            I am a polyglot programmer able to be productive in several\r\n            languages.\r\n          </li>\r\n          <li>\r\n            I will freely admit to having no Go(lang) programming experience,\r\n            but have extensive JS/Typescript and React experience (in fact, this\r\n            document is written in all of the above), and am very willing to\r\n            learn.\r\n          </li>\r\n          <li>\r\n            I spend nearly all of my time consuming and constructing APIs and\r\n            User Interfaces.\r\n          </li>\r\n          <li>\r\n            I love to learn new things, and spend my free time watching courses\r\n            on{\" \"}\r\n            <a\r\n              href=\"https://app.pluralsight.com/profile/dkershner\"\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n            >\r\n              Pluralsight\r\n            </a>\r\n            .\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      <p>\r\n        If you want more information than I have provided in either my resume or\r\n        this cover letter, please see my{\" \"}\r\n        <a\r\n          href=\"https://www.linkedin.com/in/derek-kershner-54b3392/\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          LinkedIn\r\n        </a>\r\n        .\r\n      </p>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default InseegoCoverLetter;\r\n","import React from \"react\";\r\nimport { Row, Col } from \"react-bootstrap\";\r\n\r\nimport InseegoCoverLetter from \"./CoverLetters/InseegoCoverLetter\";\r\nimport KollectiveCoverLetter from \"./CoverLetters/KollectiveCoverLetter\";\r\nimport G5CoverLetter from \"./CoverLetters/G5CoverLetter\";\r\nimport DevotedHealthCoverLetter from \"./CoverLetters/DevotedHealthCoverLetter\";\r\n\r\ninterface CoverLetterProps {\r\n  company: string;\r\n}\r\n\r\nconst CoverLetter = (props: CoverLetterProps) => {\r\n  return (\r\n    <Row className=\"mt-3\">\r\n      <Col>\r\n        <hr />\r\n        <GetCoverLetter {...props} />\r\n        <p>\r\n          I look forward to the challenge. Thank you for your consideration.\r\n        </p>\r\n        <h5>Sincerely,</h5>\r\n        <h4 className=\"mt-2\">Derek Kershner</h4>\r\n        <hr />\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\ninterface GetCoverLetterProps {\r\n  company: string;\r\n}\r\n\r\nconst GetCoverLetter = (props: GetCoverLetterProps) => {\r\n  const { company } = props;\r\n  if (company === \"inseego\") {\r\n    return <InseegoCoverLetter />;\r\n  } else if (company === \"kollective\") {\r\n    return <KollectiveCoverLetter />;\r\n  } else if (company === \"g5\") {\r\n    return <G5CoverLetter />;\r\n  } else if (company === \"devotedHealth\") {\r\n    return <DevotedHealthCoverLetter />;\r\n  } else {\r\n    return null;\r\n  }\r\n};\r\n\r\nexport default CoverLetter;\r\n","import React from \"react\";\r\nimport { Container, Col, Row } from \"react-bootstrap\";\r\n\r\nimport ResumeHeader from \"./ResumeTab/ResumeHeader\";\r\nimport CoverLetter from \"./CoverLetterTab/CoverLetter\";\r\n\r\ninterface CoverLetterTabProps {\r\n  company: string;\r\n}\r\n\r\nconst CoverLetterTab = (props: CoverLetterTabProps) => {\r\n  return (\r\n    <Container className=\"mt-5\">\r\n      <ResumeHeader {...props} />\r\n      <CoverLetter {...props} />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default CoverLetterTab;\r\n","import React from \"react\";\r\nimport { Row, Col, Card } from \"react-bootstrap\";\r\n\r\nconst Objective = props => {\r\n  return (\r\n    <Row className=\"mt-3\">\r\n      <Col>\r\n        <Card border=\"secondary\">\r\n          <Card.Header>\r\n            <h3>Objective</h3>\r\n          </Card.Header>\r\n          <Card.Body>\r\n            <p>{props.resume.objective}</p>\r\n          </Card.Body>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default Objective;\r\n","import React from \"react\";\r\nimport { MdCloud, MdCloudQueue } from \"react-icons/md\";\r\n\r\nconst fiveNumbers = [1, 2, 3, 4, 5];\r\n\r\ninterface SkillDisplayProps {\r\n  filled: number;\r\n}\r\n\r\nconst SkillDisplay = (props: SkillDisplayProps) => {\r\n  return (\r\n    <React.Fragment>\r\n      {fiveNumbers.map((number, index) => (\r\n        <SkillBubble key={index} yes={props.filled >= number} />\r\n      ))}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\ninterface SkillBubbleProps {\r\n  yes: boolean;\r\n}\r\n\r\nconst SkillBubble = (props: SkillBubbleProps) => {\r\n  if (props.yes) {\r\n    return <MdCloud />;\r\n  } else {\r\n    return <MdCloudQueue />;\r\n  }\r\n};\r\n\r\nexport default SkillDisplay;\r\n","import React from \"react\";\r\nimport { Row, Col, Card, ListGroup, ListGroupItem } from \"react-bootstrap\";\r\n\r\nimport SkillDisplay from \"../../../components/SkillDisplay\";\r\n\r\nconst Skills = props => {\r\n  const { resume, format } = props;\r\n  return (\r\n    <Row className=\"mt-3\">\r\n      <Col>\r\n        <Card border=\"secondary\">\r\n          <Card.Header>\r\n            <h3>Skills & Framework Familiarity</h3>\r\n          </Card.Header>\r\n          <Card.Body>\r\n            <Row>\r\n              <Col>\r\n                <p className=\"text-muted\">\r\n                  Any skill that directly matches a job requirement will be{\" \"}\r\n                  <strong>bolded</strong>.\r\n                </p>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              {resume.skills.map((skill, index) => (\r\n                <Col key={index} className=\"mt-2\" xs=\"12\" md=\"6\">\r\n                  <Card border=\"secondary\">\r\n                    <Card.Header>\r\n                      {skill.bolded ? (\r\n                        <strong>{skill.name}</strong>\r\n                      ) : (\r\n                        skill.name\r\n                      )}\r\n                    </Card.Header>\r\n                    <ListGroup className=\"list-group-flush\">\r\n                      {skill.subSkills.map((subSkill, iindex) => (\r\n                        <ListGroupItem\r\n                          key={iindex}\r\n                          action={format === \"print\"}\r\n                          href={format !== \"print\" ? subSkill.link : \"\"}\r\n                          target={format !== \"print\" ? \"_blank\" : \"\"}\r\n                        >\r\n                          <Row>\r\n                            <Col>\r\n                              {subSkill.bolded ? (\r\n                                <strong>{subSkill.name}</strong>\r\n                              ) : (\r\n                                subSkill.name\r\n                              )}\r\n                              :\r\n                            </Col>{\" \"}\r\n                            <Col className=\"align-self-center\">\r\n                              <SkillDisplay filled={subSkill.score} />\r\n                            </Col>\r\n                          </Row>\r\n                        </ListGroupItem>\r\n                      ))}\r\n                    </ListGroup>\r\n                  </Card>\r\n                </Col>\r\n              ))}\r\n            </Row>\r\n            <Row className=\"mt-3\">\r\n              <Col>\r\n                <Card border=\"secondary\">\r\n                  <Card.Header>Other Skills</Card.Header>\r\n                  <Card.Body>\r\n                    <Row className=\"mt-1\">\r\n                      {resume.otherSkills.map((otherSkill, index) => (\r\n                        <Col\r\n                          key={index}\r\n                          className=\"mt-2 text-center\"\r\n                          md=\"6\"\r\n                          lg=\"3\"\r\n                        >\r\n                          {otherSkill.bolded ? (\r\n                            <strong>{otherSkill.name}</strong>\r\n                          ) : (\r\n                            otherSkill.name\r\n                          )}\r\n                        </Col>\r\n                      ))}\r\n                    </Row>\r\n                  </Card.Body>\r\n                </Card>\r\n              </Col>\r\n            </Row>\r\n          </Card.Body>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default Skills;\r\n","import React from \"react\";\r\nimport { Row, Col, Card, ListGroupItem, ListGroup } from \"react-bootstrap\";\r\n\r\nconst Experience = props => {\r\n  return (\r\n    <Row className=\"mt-3\">\r\n      <Col>\r\n        <Card border=\"secondary\">\r\n          <Card.Header>\r\n            <h3>Experience</h3>\r\n          </Card.Header>\r\n          <Card.Body>\r\n            <Row>\r\n              <Col className=\"mt-2\" md=\"12\" lg=\"6\">\r\n                <Card border=\"secondary\">\r\n                  <Card.Header>\r\n                    <h4>Owner - Kershner Endeavors LLC</h4>\r\n                  </Card.Header>\r\n                  <ListGroup className=\"list-group-flush\">\r\n                    <ListGroupItem className=\"text-success\">\r\n                      2014-Present\r\n                    </ListGroupItem>\r\n                    <ListGroupItem>\r\n                      Consulting business focused on offering Software\r\n                      Development, Cloud/IT Systems Administration, and Team\r\n                      Management.\r\n                    </ListGroupItem>\r\n                    <ListGroupItem>\r\n                      A principal partner in{\" \"}\r\n                      <a\r\n                        href=\"https://eformedpartners.com\"\r\n                        target=\"_blank\"\r\n                        rel=\"noopener noreferrer\"\r\n                      >\r\n                        eFormed Partners\r\n                      </a>{\" \"}\r\n                      as well, a group of e-commerce professionals who incubate\r\n                      small businesses with enterprise level marketplace\r\n                      software. As part of this group, worked on several\r\n                      business plans, met with investors, and successfully\r\n                      funded startups.\r\n                    </ListGroupItem>\r\n                    <ListGroupItem>\r\n                      <p>Primary responsibilies:</p>\r\n                      <ul>\r\n                        <li>\r\n                          Manage a team of Software Developers, including\r\n                          offshore.\r\n                        </li>\r\n                        <li>\r\n                          Plan, Design, Monitor, and implement all software\r\n                          development.\r\n                        </li>\r\n                        <li>Automate deployment into the cloud (CI/CD).</li>\r\n                      </ul>\r\n                    </ListGroupItem>\r\n                  </ListGroup>\r\n                  <Card.Footer>\r\n                    Testimonials can be found on my{\" \"}\r\n                    <a\r\n                      href=\"https://www.linkedin.com/in/derek-kershner-54b3392/\"\r\n                      target=\"_blank\"\r\n                      rel=\"noopener noreferrer\"\r\n                    >\r\n                      LinkedIn\r\n                    </a>{\" \"}\r\n                    under recommendations.\r\n                  </Card.Footer>\r\n                </Card>\r\n              </Col>\r\n              <Col className=\"mt-2\" md=\"12\" lg=\"6\">\r\n                <Card border=\"secondary\">\r\n                  <Card.Header>\r\n                    <h4>Director of Business Analytics - Altrec, Inc.</h4>\r\n                  </Card.Header>\r\n                  <ListGroup className=\"list-group-flush\">\r\n                    <ListGroupItem className=\"text-success\">\r\n                      2006-2014\r\n                    </ListGroupItem>\r\n                    <ListGroupItem>\r\n                      E-commerce company focused on Outdoor Gear\r\n                    </ListGroupItem>\r\n                    <ListGroupItem>\r\n                      <p>Primary responsibilies:</p>\r\n                      <ul>\r\n                        <li>Manage the marketing team.</li>\r\n                        <li>\r\n                          Serve as intelligence advisor to Senior Management.\r\n                          Regularly meet with department heads and supervisors\r\n                          to report on the state of the business, the reasons\r\n                          behind it, and identify opportunities therein.\r\n                        </li>\r\n                        <li>\r\n                          Provide data dashboards and reporting for all\r\n                          departments, including Merchandise Planning and\r\n                          Marketing Performance / Budgeting.\r\n                        </li>\r\n                      </ul>\r\n                    </ListGroupItem>\r\n                  </ListGroup>\r\n                  <Card.Footer>\r\n                    Won awards for major business impact. Several\r\n                    recommendations can be found on my{\" \"}\r\n                    <a\r\n                      href=\"https://www.linkedin.com/in/derek-kershner-54b3392/\"\r\n                      target=\"_blank\"\r\n                      rel=\"noopener noreferrer\"\r\n                    >\r\n                      LinkedIn\r\n                    </a>\r\n                    .\r\n                  </Card.Footer>\r\n                </Card>\r\n              </Col>\r\n            </Row>\r\n          </Card.Body>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default Experience;\r\n","import React from \"react\";\r\nimport { Row, Col, Card, ListGroup, ListGroupItem } from \"react-bootstrap\";\r\n\r\nconst Education = props => {\r\n  return (\r\n    <Row className=\"mt-3\">\r\n      <Col>\r\n        <Card border=\"secondary\">\r\n          <Card.Header>\r\n            <h3>Education</h3>\r\n          </Card.Header>\r\n          <ListGroup className=\"list-group-flush\">\r\n            <ListGroupItem>\r\n              <Row>\r\n                <Col xs=\"auto\">\r\n                  <p className=\"text-success\">2002-2005</p>\r\n                </Col>\r\n                <Col>\r\n                  <p>\r\n                    BS - University of Oregon Lundquist College of Business -\r\n                    Concentration in Finance\r\n                  </p>\r\n                </Col>\r\n              </Row>\r\n            </ListGroupItem>\r\n          </ListGroup>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default Education;\r\n","import React from \"react\";\r\nimport { Row, Col, Card, ListGroup, ListGroupItem } from \"react-bootstrap\";\r\n\r\nconst References = props => {\r\n  const { resume } = props;\r\n  return (\r\n    <Row className=\"mt-3\">\r\n      <Col>\r\n        <Card border=\"secondary\">\r\n          <Card.Header>\r\n            <h3>References</h3>\r\n          </Card.Header>\r\n          <ListGroup className=\"list-group-flush\">\r\n            {resume.references.map((reference, index) => (\r\n              <ListGroupItem key={index}>\r\n                <a href={reference.link} target=\"_blank\">\r\n                  {reference.name}\r\n                </a>{\" \"}\r\n                - {reference.description}\r\n              </ListGroupItem>\r\n            ))}\r\n            <ListGroupItem>\r\n              {resume.references.length > 0 ? \"More r\" : \"R\"}eferences available\r\n              upon request.\r\n            </ListGroupItem>\r\n          </ListGroup>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default References;\r\n","const makeRange = (beginNumber: number, endNumber: number) => {\r\n  let returnArray = [];\r\n  for (let x = beginNumber; x <= endNumber; x++) {\r\n    returnArray.push(x);\r\n  }\r\n  return returnArray;\r\n};\r\n\r\nexport default makeRange;\r\n","import inseegoResume from \"./InseegoResume\";\r\nimport kollectiveResume from \"./KollectiveResume\";\r\nimport g5Resume from \"./G5Resume\";\r\nimport devotedHealthResume from \"./DevotedHealthResume\";\r\n\r\nconst resumes = [\r\n  inseegoResume,\r\n  kollectiveResume,\r\n  g5Resume,\r\n  devotedHealthResume\r\n];\r\n\r\nconst getResume = (company: string) => {\r\n  let returnResume = resumes.filter(resume => resume.company === company);\r\n  console.log(returnResume);\r\n  if (returnResume.length === 1) {\r\n    return returnResume[0];\r\n  } else {\r\n    return null;\r\n  }\r\n};\r\n\r\nexport default getResume;\r\n","import makeRange from \"../../../../utils/MakeRange\";\r\n\r\nconst inseegoResume = {\r\n  company: \"inseego\",\r\n  objective:\r\n    \"Experienced Full-Stack Software Developer, DevOps Practitioner, and Cloud Architect with an unending thirst for learning, is seeking new challenges and experiences to broaden his depth of knowledge.\",\r\n  skills: [\r\n    {\r\n      name: \"Front-End\",\r\n      subSkills: [\r\n        {\r\n          name: \"React / JS\",\r\n          score: 5,\r\n          link: \"https://reactjs.org/\"\r\n        },\r\n        {\r\n          name: \"TypeScript / JS\",\r\n          bolded: true,\r\n          score: 5,\r\n          link: \"https://www.typescriptlang.org/\"\r\n        },\r\n        {\r\n          name: \"Shopify / Liquid\",\r\n          score: 4,\r\n          link: \"https://shopify.github.io/liquid/\"\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      name: \"Back-End\",\r\n      subSkills: [\r\n        {\r\n          name: \"ASP.Net Core / C#\",\r\n          score: 5,\r\n          link: \"https://dotnet.microsoft.com/apps/aspnet\"\r\n        },\r\n        {\r\n          name: \"Node / JS\",\r\n          score: 4,\r\n          link: \"https://nodejs.org/en/\"\r\n        },\r\n        {\r\n          name: \"Flask / Python\",\r\n          score: 3,\r\n          link: \"https://www.python.org/\"\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      name: \"Clouds\",\r\n      subSkills: [\r\n        {\r\n          name: \"Azure\",\r\n          score: 5,\r\n          link: \"https://azure.microsoft.com/en-us/\"\r\n        },\r\n        {\r\n          name: \"Google\",\r\n          bolded: true,\r\n          score: 3,\r\n          link: \"https://cloud.google.com/\"\r\n        },\r\n        {\r\n          name: \"AWS\",\r\n          bolded: true,\r\n          score: 2,\r\n          link: \"https://aws.amazon.com/\"\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      name: \"Deployment / DevOps\",\r\n      bolded: true,\r\n      subSkills: [\r\n        {\r\n          name: \"Azure DevOps / VSTS\",\r\n          score: 5,\r\n          link: \"https://azure.microsoft.com/en-us/services/devops/\"\r\n        },\r\n        {\r\n          name: \"Kubernetes / Docker\",\r\n          score: 4,\r\n          link: \"https://kubernetes.io/\"\r\n        }\r\n      ]\r\n    }\r\n  ],\r\n  otherSkills: [\r\n    {\r\n      name: \"Application Design / Microservices\"\r\n    },\r\n    {\r\n      name: \"Serverless Functions\"\r\n    },\r\n    {\r\n      name: \"RESTful APIs - Build / Consume\",\r\n      bolded: true\r\n    },\r\n    {\r\n      name: \"Project Planning & Management / Agile\",\r\n      bolded: true\r\n    },\r\n    {\r\n      name: \"Entity Framework / SQL / RDBMS\",\r\n      bolded: false\r\n    },\r\n    {\r\n      name: \"NoSQL / JSON\",\r\n      bolded: false\r\n    },\r\n    {\r\n      name: \"Continuous Integration / Continuous Deployment\",\r\n      bolded: false\r\n    },\r\n    {\r\n      name: \"Search Engine Optimization\",\r\n      bolded: false\r\n    },\r\n    {\r\n      name: \"Data Analysis / Big Data\",\r\n      bolded: false\r\n    },\r\n    {\r\n      name: \"User Interface Design\",\r\n      bolded: true\r\n    },\r\n    {\r\n      name: \"Git / Version Control\",\r\n      bolded: true\r\n    },\r\n    {\r\n      name: \"Server Administration\",\r\n      bolded: true\r\n    }\r\n  ],\r\n  spaces: makeRange(0, 11),\r\n  references: [\r\n    {\r\n      name: \"DelRay Davis\",\r\n      link: \"https://www.linkedin.com/in/delraydavis/\",\r\n      description: \"DMS Engineer at Inseego\"\r\n    }\r\n  ]\r\n};\r\n\r\nexport default inseegoResume;\r\n","import makeRange from \"../../../../utils/MakeRange\";\r\n\r\nconst kollectiveResume = {\r\n  company: \"kollective\",\r\n  objective:\r\n    \"Experienced Full-Stack Software Developer, DevOps Practitioner, and Cloud Architect with an unending thirst for learning, is seeking new challenges and experiences to broaden his depth of knowledge.\",\r\n  skills: [\r\n    {\r\n      name: \"Back-End\",\r\n      bolded: true,\r\n      subSkills: [\r\n        {\r\n          name: \"ASP.Net Core / C#\",\r\n          score: 5,\r\n          link: \"https://dotnet.microsoft.com/apps/aspnet\"\r\n        },\r\n        {\r\n          name: \"Node / JS\",\r\n          score: 4,\r\n          link: \"https://nodejs.org/en/\"\r\n        },\r\n        {\r\n          name: \"Flask / Python\",\r\n          score: 3,\r\n          link: \"https://www.python.org/\"\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      name: \"Deployment / DevOps\",\r\n      bolded: true,\r\n      subSkills: [\r\n        {\r\n          name: \"Azure DevOps / VSTS\",\r\n          score: 5,\r\n          link: \"https://azure.microsoft.com/en-us/services/devops/\"\r\n        },\r\n        {\r\n          name: \"Kubernetes / Docker\",\r\n          bolded: true,\r\n          score: 4,\r\n          link: \"https://kubernetes.io/\"\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      name: \"Front-End\",\r\n      subSkills: [\r\n        {\r\n          name: \"React / JS\",\r\n          score: 5,\r\n          link: \"https://reactjs.org/\"\r\n        },\r\n        {\r\n          name: \"TypeScript / JS\",\r\n          bolded: false,\r\n          score: 5,\r\n          link: \"https://www.typescriptlang.org/\"\r\n        }\r\n      ]\r\n    },\r\n\r\n    {\r\n      name: \"Clouds\",\r\n      subSkills: [\r\n        {\r\n          name: \"Azure\",\r\n          score: 5,\r\n          link: \"https://azure.microsoft.com/en-us/\"\r\n        },\r\n        {\r\n          name: \"Google\",\r\n          bolded: false,\r\n          score: 3,\r\n          link: \"https://cloud.google.com/\"\r\n        },\r\n        {\r\n          name: \"AWS\",\r\n          bolded: false,\r\n          score: 2,\r\n          link: \"https://aws.amazon.com/\"\r\n        }\r\n      ]\r\n    }\r\n  ],\r\n  otherSkills: [\r\n    {\r\n      name: \"Application Design / Microservices\"\r\n    },\r\n    {\r\n      name: \"Serverless Functions\"\r\n    },\r\n    {\r\n      name: \"RESTful APIs - Build / Consume\",\r\n      bolded: true\r\n    },\r\n    {\r\n      name: \"Project Planning & Management / Agile\",\r\n      bolded: true\r\n    },\r\n    {\r\n      name: \"Entity Framework / SQL / RDBMS\",\r\n      bolded: true\r\n    },\r\n    {\r\n      name: \"NoSQL / JSON\",\r\n      bolded: false\r\n    },\r\n    {\r\n      name: \"Continuous Integration / Continuous Deployment\",\r\n      bolded: true\r\n    },\r\n    {\r\n      name: \"Data Analysis / Big Data\",\r\n      bolded: false\r\n    },\r\n    {\r\n      name: \"User Interface Design\",\r\n      bolded: true\r\n    },\r\n    {\r\n      name: \"Git / Version Control\",\r\n      bolded: false\r\n    },\r\n    {\r\n      name: \"Server Administration (Win & Linux)\",\r\n      bolded: true\r\n    },\r\n    {\r\n      name:\r\n        \"Unit & Integration Testing (For all back-end frameworks listed above)\",\r\n      bolded: true\r\n    },\r\n    {\r\n      name:\r\n        \"Asynchronous Programming (For all front-end and back-end frameworks above)\",\r\n      bolded: true\r\n    }\r\n  ],\r\n\r\n  spaces: makeRange(0, 7),\r\n  references: []\r\n};\r\n\r\nexport default kollectiveResume;\r\n","import makeRange from \"../../../../utils/MakeRange\";\r\n\r\nconst g5Resume = {\r\n  company: \"g5\",\r\n  objective:\r\n    \"Data Analyst turned Software Developer with an unending thirst for learning, is seeking new challenges and experiences to broaden his depth of knowledge.\",\r\n  skills: [\r\n    {\r\n      name: \"Data-Related Languages\",\r\n      subSkills: [\r\n        {\r\n          name: \"JS\",\r\n          bolded: true,\r\n          score: 5,\r\n          link: \"https://js.org/\"\r\n        },\r\n        {\r\n          name: \"Python\",\r\n          bolded: true,\r\n          score: 3,\r\n          link: \"https://www.typescriptlang.org/\"\r\n        },\r\n        {\r\n          name: \"C#\",\r\n          score: 5,\r\n          link: \"https://docs.microsoft.com/en-us/dotnet/csharp/\"\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      name: \"Data Structures\",\r\n      subSkills: [\r\n        {\r\n          name: \"SQL (MS & My)\",\r\n          bolded: true,\r\n          score: 5\r\n        },\r\n        {\r\n          name: \"JSON (Various)\",\r\n          score: 5\r\n        },\r\n        {\r\n          name: \"Key-Value (Various)\",\r\n          score: 5\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      name: \"Front-End\",\r\n      subSkills: [\r\n        {\r\n          name: \"React / JS\",\r\n          score: 5,\r\n          link: \"https://reactjs.org/\"\r\n        },\r\n        {\r\n          name: \"TypeScript / JS\",\r\n          bolded: false,\r\n          score: 5,\r\n          link: \"https://www.typescriptlang.org/\"\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      name: \"Back-End\",\r\n      subSkills: [\r\n        {\r\n          name: \"ASP.Net Core / C#\",\r\n          score: 5,\r\n          link: \"https://dotnet.microsoft.com/apps/aspnet\"\r\n        },\r\n        {\r\n          name: \"Node / JS\",\r\n          score: 4,\r\n          link: \"https://nodejs.org/en/\"\r\n        },\r\n        {\r\n          name: \"Flask / Python\",\r\n          score: 3,\r\n          link: \"https://www.python.org/\"\r\n        }\r\n      ]\r\n    }\r\n  ],\r\n  otherSkills: [\r\n    {\r\n      name: \"Application Design / Microservices\"\r\n    },\r\n    {\r\n      name: \"Serverless Functions\"\r\n    },\r\n    {\r\n      name: \"RESTful APIs - Build / Consume\",\r\n      bolded: false\r\n    },\r\n    {\r\n      name: \"Project Planning & Management / Agile\",\r\n      bolded: true\r\n    },\r\n    {\r\n      name: \"Entity Framework / SQL / RDBMS\",\r\n      bolded: true\r\n    },\r\n    {\r\n      name: \"NoSQL / JSON\",\r\n      bolded: false\r\n    },\r\n    {\r\n      name: \"Continuous Integration / Continuous Deployment\",\r\n      bolded: false\r\n    },\r\n    {\r\n      name: \"Search Engine Optimization\",\r\n      bolded: false\r\n    },\r\n    {\r\n      name: \"Data Analysis / Big Data / Machine Learning\",\r\n      bolded: true\r\n    },\r\n    {\r\n      name: \"User Interface Design\",\r\n      bolded: false\r\n    },\r\n    {\r\n      name: \"Git / Version Control\",\r\n      bolded: false\r\n    },\r\n    {\r\n      name: \"Server Administration\",\r\n      bolded: false\r\n    }\r\n  ],\r\n  spaces: makeRange(0, 11),\r\n  references: [\r\n    {\r\n      name: \"Andrew Warren\",\r\n      link: \"https://www.linkedin.com/in/andrew-warren-b33a7685/\",\r\n      description: \"Manager, Website Implementation at G5\"\r\n    }\r\n  ]\r\n};\r\n\r\nexport default g5Resume;\r\n","import makeRange from \"../../../../utils/MakeRange\";\r\n\r\nconst devotedHealthResume = {\r\n  company: \"devotedHealth\",\r\n  objective:\r\n    \"Experienced Full-Stack Software Developer, DevOps Practitioner, and Cloud Architect with an unending thirst for learning, is seeking new challenges and experiences to broaden his depth of knowledge.\",\r\n  skills: [\r\n    {\r\n      name: \"Front-End\",\r\n      subSkills: [\r\n        {\r\n          name: \"React / JS\",\r\n          bolded: true,\r\n          score: 5,\r\n          link: \"https://reactjs.org/\"\r\n        },\r\n        {\r\n          name: \"TypeScript / JS\",\r\n          bolded: true,\r\n          score: 5,\r\n          link: \"https://www.typescriptlang.org/\"\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      name: \"Back-End\",\r\n      subSkills: [\r\n        {\r\n          name: \"ASP.Net Core / C#\",\r\n          score: 5,\r\n          link: \"https://dotnet.microsoft.com/apps/aspnet\"\r\n        },\r\n        {\r\n          name: \"Node / JS\",\r\n          score: 4,\r\n          link: \"https://nodejs.org/en/\"\r\n        },\r\n        {\r\n          name: \"Flask / Python\",\r\n          score: 3,\r\n          link: \"https://www.python.org/\"\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      name: \"Clouds\",\r\n      subSkills: [\r\n        {\r\n          name: \"Azure\",\r\n          score: 5,\r\n          link: \"https://azure.microsoft.com/en-us/\"\r\n        },\r\n        {\r\n          name: \"Google\",\r\n          score: 3,\r\n          link: \"https://cloud.google.com/\"\r\n        },\r\n        {\r\n          name: \"AWS\",\r\n          bolded: true,\r\n          score: 2,\r\n          link: \"https://aws.amazon.com/\"\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      name: \"Deployment / DevOps\",\r\n      subSkills: [\r\n        {\r\n          name: \"Azure DevOps / VSTS\",\r\n          score: 5,\r\n          link: \"https://azure.microsoft.com/en-us/services/devops/\"\r\n        },\r\n        {\r\n          name: \"Kubernetes / Docker\",\r\n          score: 4,\r\n          link: \"https://kubernetes.io/\"\r\n        }\r\n      ]\r\n    }\r\n  ],\r\n  otherSkills: [\r\n    {\r\n      name: \"Application Design / Microservices\"\r\n    },\r\n    {\r\n      name: \"Serverless Functions\"\r\n    },\r\n    {\r\n      name: \"RESTful APIs - Build / Consume\",\r\n      bolded: false\r\n    },\r\n    {\r\n      name: \"Project Planning & Management / Agile\",\r\n      bolded: false\r\n    },\r\n    {\r\n      name: \"Entity Framework / SQL / RDBMS\",\r\n      bolded: false\r\n    },\r\n    {\r\n      name: \"NoSQL / JSON\",\r\n      bolded: false\r\n    },\r\n    {\r\n      name: \"Continuous Integration / Continuous Deployment\",\r\n      bolded: false\r\n    },\r\n    {\r\n      name: \"Search Engine Optimization\",\r\n      bolded: false\r\n    },\r\n    {\r\n      name: \"Data Analysis / Big Data\",\r\n      bolded: false\r\n    },\r\n    {\r\n      name: \"User Interface Design\",\r\n      bolded: false\r\n    },\r\n    {\r\n      name: \"Git / Version Control\",\r\n      bolded: false\r\n    },\r\n    {\r\n      name: \"Server Administration\",\r\n      bolded: false\r\n    }\r\n  ],\r\n  spaces: makeRange(0, 11),\r\n  references: []\r\n};\r\n\r\nexport default devotedHealthResume;\r\n","import React from \"react\";\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Card,\r\n  ListGroup,\r\n  ListGroupItem\r\n} from \"react-bootstrap\";\r\n\r\nimport ResumeHeader from \"./ResumeTab/ResumeHeader\";\r\nimport Objective from \"./ResumeTab/Objective\";\r\nimport Skills from \"./ResumeTab/Skills\";\r\nimport Experience from \"./ResumeTab/Experience\";\r\nimport Education from \"./ResumeTab/Education\";\r\nimport References from \"./ResumeTab/References\";\r\n\r\nimport getResume from \"./ResumeTab/Resumes/GetResume\";\r\n\r\nconst urlParams = new URLSearchParams(window.location.search);\r\nconst format = urlParams.get(\"format\");\r\n\r\ninterface ResumeTabProps {\r\n  company: string;\r\n  noHeader?: boolean;\r\n}\r\n\r\nconst ResumeTab = (props: ResumeTabProps) => {\r\n  const resume = getResume(props.company);\r\n\r\n  if (resume === undefined) {\r\n    return (\r\n      <Container className=\"mt-5\">\r\n        <ResumeHeader {...props} />\r\n        <p>Loading...</p>\r\n        <Experience {...props} />\r\n        <Education {...props} />\r\n        <p>Loading...</p>>\r\n      </Container>\r\n    );\r\n  } else {\r\n    return (\r\n      <Container className=\"mt-5\">\r\n        <ResumeHeader {...props} />\r\n        <Objective {...props} resume={resume} />\r\n        <Skills {...props} resume={resume} format={format} />\r\n        {format === \"print\" &&\r\n          resume.spaces.map((space, index) => <br key={index} />)}\r\n        <Experience {...props} />\r\n        <Education {...props} />\r\n        <References {...props} resume={resume} />\r\n      </Container>\r\n    );\r\n  }\r\n};\r\n\r\nexport default ResumeTab;\r\n","const properCase = (text: string) => {\r\n  return text.replace(/\\w\\S*/g, function(txt) {\r\n    return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\r\n  });\r\n};\r\n\r\nexport default properCase;\r\n","import React from \"react\";\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Tabs,\r\n  Tab,\r\n  ButtonGroup,\r\n  Button\r\n} from \"react-bootstrap\";\r\nimport HelmetHead from \"../components/Seo\";\r\n\r\nimport BaseProps from \"../interfaces/BaseProps\";\r\nimport CoverLetterTab from \"./resumes/CoverLetterTab\";\r\nimport ResumeTab from \"./resumes/ResumeTab\";\r\nimport makeRange from \"../utils/MakeRange\";\r\nimport properCase from \"../utils/ProperCase\";\r\n\r\nconst urlParams = new URLSearchParams(window.location.search);\r\nconst format = urlParams.get(\"format\");\r\n\r\ninterface MatchParams {\r\n  company: string;\r\n}\r\n\r\nexport default class Resume extends React.Component<BaseProps<MatchParams>> {\r\n  state = {\r\n    activeTab: \"cover\"\r\n  };\r\n\r\n  render() {\r\n    const { company } = this.props.match.params;\r\n\r\n    if (format === \"print\") {\r\n      return (\r\n        <Container className=\"mt-5\">\r\n          <TabChooser company={company} activeTab={\"resume\"} />\r\n        </Container>\r\n      );\r\n    } else {\r\n      return (\r\n        <Container className=\"mt-5\">\r\n          <HelmetHead\r\n            title={`Resume for ${properCase(company)} | DKershner.com`}\r\n          />\r\n          <Row className=\"justify-content-center\">\r\n            <Col xs=\"auto\">\r\n              <ButtonGroup>\r\n                <Button\r\n                  variant={\r\n                    this.state.activeTab === \"cover\" ? \"primary\" : \"secondary\"\r\n                  }\r\n                  onClick={() => this.setState({ activeTab: \"cover\" })}\r\n                >\r\n                  Cover Letter\r\n                </Button>\r\n                <Button\r\n                  variant={\r\n                    this.state.activeTab === \"resume\" ? \"primary\" : \"secondary\"\r\n                  }\r\n                  onClick={() => this.setState({ activeTab: \"resume\" })}\r\n                >\r\n                  Resume\r\n                </Button>\r\n              </ButtonGroup>\r\n            </Col>\r\n          </Row>\r\n          <TabChooser company={company} activeTab={this.state.activeTab} />\r\n        </Container>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nconst TabChooser = props => {\r\n  if (props.activeTab === \"cover\") {\r\n    return <CoverLetterTab company={props.company} />;\r\n  } else {\r\n    return <ResumeTab company={props.company} />;\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport BaseProps from \"../interfaces/BaseProps\";\r\nimport {\r\n  getTechnologyById,\r\n  getProjectsForTechnology,\r\n  getPostsForTechnology\r\n} from \"../classes/Technology\";\r\n\r\nimport Error from \"../Error\";\r\nimport SkillDisplay from \"../components/SkillDisplay\";\r\nimport properCase from \"../utils/ProperCase\";\r\nimport TechnologyBadge from \"../components/TechnologyBadge\";\r\n\r\ninterface MatchParams {\r\n  technologyType: string;\r\n  technologyId: string;\r\n}\r\n\r\ninterface TechnologyProps extends BaseProps<MatchParams> {}\r\n\r\nconst TechnologyPage = (props: TechnologyProps) => {\r\n  const { technologyId } = props.match.params;\r\n  const technology = getTechnologyById(technologyId);\r\n  const projects = getProjectsForTechnology(technology);\r\n  const posts = getPostsForTechnology(technology);\r\n  if (technology !== undefined) {\r\n    return (\r\n      <Container className=\"mt-5\">\r\n        <Row>\r\n          <Col>\r\n            <h1 className=\"display-3\">{technology.label}</h1>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <TechnologyBadge technology={technology} />\r\n          </Col>\r\n        </Row>\r\n        {technology.link !== undefined && (\r\n          <Row className=\"mt-3\">\r\n            <Col>\r\n              <a\r\n                href={technology.link}\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n              >\r\n                <h4>{technology.label} Documentation</h4>\r\n              </a>\r\n            </Col>\r\n          </Row>\r\n        )}\r\n        <Row className=\"mt-3\">\r\n          <Col>\r\n            <Row>\r\n              <Col>\r\n                <strong>Technology Type:</strong>\r\n              </Col>\r\n              <Col>{properCase(technology.type)}</Col>\r\n            </Row>\r\n          </Col>\r\n          {technology.language !== undefined && (\r\n            <Col>\r\n              <Row>\r\n                <Col xs=\"auto\">\r\n                  <strong>Language:</strong>\r\n                </Col>\r\n                <Col>{technology.language}</Col>\r\n              </Row>\r\n            </Col>\r\n          )}\r\n          <Col>\r\n            <Row>\r\n              <Col xs=\"auto\">\r\n                <strong>Personal Familiarity:</strong>\r\n              </Col>\r\n              <Col>\r\n                <SkillDisplay filled={technology.familiarity} />\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n        </Row>\r\n        {projects.length > 0 && (\r\n          <React.Fragment>\r\n            <Row className=\"mt-5\">\r\n              <Col>\r\n                <h4>Portfolio Projects that use this technology:</h4>\r\n                <ul>\r\n                  {projects.map((project, index) => (\r\n                    <li key={index}>\r\n                      <h5>\r\n                        <a href={`/portfolio/${project.id}`}>{project.name}</a>{\" \"}\r\n                        uses this technology in {project.uses} service\r\n                        {project.uses > 1 && \"s\"}\r\n                      </h5>\r\n                    </li>\r\n                  ))}\r\n                </ul>\r\n              </Col>\r\n            </Row>\r\n          </React.Fragment>\r\n        )}\r\n        {posts.length > 0 && (\r\n          <React.Fragment>\r\n            <Row className=\"mt-5\">\r\n              <Col>\r\n                <h4>Posts written about this technology:</h4>\r\n\r\n                <ul>\r\n                  {posts.map((post, index) => (\r\n                    <li key={index}>\r\n                      <h5>\r\n                        <a href={`/blog/${post.handle}`}>{post.title}</a>\r\n                      </h5>\r\n                    </li>\r\n                  ))}\r\n                </ul>\r\n              </Col>\r\n            </Row>\r\n          </React.Fragment>\r\n        )}\r\n      </Container>\r\n    );\r\n  } else {\r\n    return <Error />;\r\n  }\r\n};\r\n\r\nexport default TechnologyPage;\r\n","import React from \"react\";\r\nimport { Switch, Route } from \"react-router\";\r\n\r\nimport Home from \"../pages/Home\";\r\nimport About from \"../pages/home/About\";\r\nimport PortfolioMenu from \"../pages/home/PortfolioMenu\";\r\nimport Portfolio from \"../pages/Portfolio\";\r\nimport Blog from \"../pages/Blog\";\r\nimport PostPage from \"../pages/blog/PostPage\";\r\nimport Error from \"../Error\";\r\nimport ResumesNav from \"../pages/resumes/ResumesNav\";\r\nimport Resume from \"../pages/Resume\";\r\nimport TechnologyPage from \"../pages/TechnologyPage\";\r\n\r\nconst AppRouter = () => (\r\n  <Switch>\r\n    <Route exact path=\"/\" component={Home} />\r\n    <Route exact path=\"/about\" component={About} />\r\n    <Route exact path=\"/portfolio/\" component={PortfolioMenu} />\r\n    <Route path=\"/portfolio/:project\" component={Portfolio} />\r\n    <Route exact path=\"/blog\" component={Blog} />\r\n    <Route path=\"/blog/technology/:technologyId\" component={Blog} />\r\n    <Route path=\"/blog/:handle\" component={PostPage} />\r\n    <Route exact path=\"/r\" component={ResumesNav} />\r\n    <Route path=\"/r/:company\" component={Resume} />\r\n    {/*<Route\r\n      exact\r\n      path=\"/technologies/:technologyType\"\r\n      component={TechnologyPage}\r\n    />*/}\r\n    <Route\r\n      path=\"/technologies/:technologyType/:technologyId\"\r\n      component={TechnologyPage}\r\n    />\r\n    <Route component={Error} status={404} />\r\n  </Switch>\r\n);\r\n\r\nexport default AppRouter;\r\n","import React, { Component } from \"react\";\r\nimport \"./bootstrap.css\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport ReactGA from \"react-ga\";\r\n\r\nimport Navigation from \"./components/Navigation\";\r\nimport Footer from \"./components/Footer\";\r\nimport AppRouter from \"./components/Router\";\r\n\r\nconst urlParams = new URLSearchParams(window.location.search);\r\nconst format = urlParams.get(\"format\");\r\n\r\nclass App extends Component {\r\n  componentDidMount() {\r\n    ReactGA.initialize(\"UA-10014066-1\");\r\n    ReactGA.pageview(window.location.pathname + window.location.search);\r\n  }\r\n  render() {\r\n    if (format === \"print\") {\r\n      return (\r\n        <Router>\r\n          <AppRouter />\r\n        </Router>\r\n      );\r\n    } else {\r\n      return (\r\n        <Router>\r\n          <Navigation />\r\n          <AppRouter />\r\n\r\n          <Footer />\r\n        </Router>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { hydrate, render } from \"react-dom\";\r\nimport './bootstrap.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nif (rootElement.hasChildNodes()) {\r\n  hydrate(<App />, rootElement);\r\n} else {\r\n  render(<App />, rootElement);\r\n}\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}